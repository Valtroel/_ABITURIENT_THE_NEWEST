/******************************************************************************/
/***               Generated by IBExpert 01.07.2022 14:56:46                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/


/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR IBE$LOG_TABLES_GEN;
CREATE GENERATOR GEN_PRIKAZ_LIKVID;

CREATE TABLE PRIKAZ_LIKVID (
    N_PRIKAZ_KIKVID  INTEGER,
    NOMER            INTEGER,
    YEAR_UCH         SMALLINT,
    PRIKAZ           VARCHAR(255) COLLATE PXW_CYRL,
    STATUS_NOMER     SMALLINT,
    DATE_C           DATE,
    DATE_PO          DATE,
    DESCRIBE         VARCHAR(255) COLLATE PXW_CYRL,
    N_TYPE_LIKVID    SMALLINT,
    FAC_DO           SMALLINT,
    FAC_PO           SMALLINT,
    VID_EDU_DO       SMALLINT,
    VID_EDU_PO       SMALLINT,
    SPECIALIZ_DO     SMALLINT,
    SPECIALIZ_PO     SMALLINT,
    KURS_DO          SMALLINT,
    KURS_PO          SMALLINT,
    N_FOUND_DO       SMALLINT,
    N_FOUND_PO       SMALLINT
);




/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE PRIKAZ_LIKVID ADD CONSTRAINT PK_PRIKAZ_LIKVID PRIMARY KEY (N_PRIKAZ_KIKVID);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: IBE$PRIKAZ_LIKVID_AD */
CREATE OR ALTER TRIGGER IBE$PRIKAZ_LIKVID_AD FOR PRIKAZ_LIKVID
ACTIVE AFTER DELETE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'PRIKAZ_LIKVID', 'D', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_PRIKAZ_KIKVID', OLD.N_PRIKAZ_KIKVID);
 
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_PRIKAZ_KIKVID',OLD.N_PRIKAZ_KIKVID, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'NOMER',OLD.NOMER, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'YEAR_UCH',OLD.YEAR_UCH, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'PRIKAZ',OLD.PRIKAZ, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'STATUS_NOMER',OLD.STATUS_NOMER, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'DATE_C',OLD.DATE_C, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'DATE_PO',OLD.DATE_PO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'DESCRIBE',OLD.DESCRIBE, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_TYPE_LIKVID',OLD.N_TYPE_LIKVID, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'FAC_DO',OLD.FAC_DO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'FAC_PO',OLD.FAC_PO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'VID_EDU_DO',OLD.VID_EDU_DO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'VID_EDU_PO',OLD.VID_EDU_PO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'SPECIALIZ_DO',OLD.SPECIALIZ_DO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'SPECIALIZ_PO',OLD.SPECIALIZ_PO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'KURS_DO',OLD.KURS_DO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'KURS_PO',OLD.KURS_PO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_FOUND_DO',OLD.N_FOUND_DO, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_FOUND_PO',OLD.N_FOUND_PO, NULL);
 
  
END
^


/* Trigger: IBE$PRIKAZ_LIKVID_AI */
CREATE OR ALTER TRIGGER IBE$PRIKAZ_LIKVID_AI FOR PRIKAZ_LIKVID
ACTIVE AFTER INSERT POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'PRIKAZ_LIKVID', 'I', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_PRIKAZ_KIKVID', NEW.N_PRIKAZ_KIKVID);
 
  IF (NOT (NEW.N_PRIKAZ_KIKVID IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_PRIKAZ_KIKVID', NULL, NEW.N_PRIKAZ_KIKVID);
  
  IF (NOT (NEW.NOMER IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'NOMER', NULL, NEW.NOMER);
  
  IF (NOT (NEW.YEAR_UCH IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'YEAR_UCH', NULL, NEW.YEAR_UCH);
  
  IF (NOT (NEW.PRIKAZ IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'PRIKAZ', NULL, NEW.PRIKAZ);
  
  IF (NOT (NEW.STATUS_NOMER IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'STATUS_NOMER', NULL, NEW.STATUS_NOMER);
  
  IF (NOT (NEW.DATE_C IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'DATE_C', NULL, NEW.DATE_C);
  
  IF (NOT (NEW.DATE_PO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'DATE_PO', NULL, NEW.DATE_PO);
  
  IF (NOT (NEW.DESCRIBE IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'DESCRIBE', NULL, NEW.DESCRIBE);
  
  IF (NOT (NEW.N_TYPE_LIKVID IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_TYPE_LIKVID', NULL, NEW.N_TYPE_LIKVID);
  
  IF (NOT (NEW.FAC_DO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'FAC_DO', NULL, NEW.FAC_DO);
  
  IF (NOT (NEW.FAC_PO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'FAC_PO', NULL, NEW.FAC_PO);
  
  IF (NOT (NEW.VID_EDU_DO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'VID_EDU_DO', NULL, NEW.VID_EDU_DO);
  
  IF (NOT (NEW.VID_EDU_PO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'VID_EDU_PO', NULL, NEW.VID_EDU_PO);
  
  IF (NOT (NEW.SPECIALIZ_DO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'SPECIALIZ_DO', NULL, NEW.SPECIALIZ_DO);
  
  IF (NOT (NEW.SPECIALIZ_PO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'SPECIALIZ_PO', NULL, NEW.SPECIALIZ_PO);
  
  IF (NOT (NEW.KURS_DO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'KURS_DO', NULL, NEW.KURS_DO);
  
  IF (NOT (NEW.KURS_PO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'KURS_PO', NULL, NEW.KURS_PO);
  
  IF (NOT (NEW.N_FOUND_DO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_FOUND_DO', NULL, NEW.N_FOUND_DO);
  
  IF (NOT (NEW.N_FOUND_PO IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_FOUND_PO', NULL, NEW.N_FOUND_PO);
 
  
END
^


/* Trigger: IBE$PRIKAZ_LIKVID_AU */
CREATE OR ALTER TRIGGER IBE$PRIKAZ_LIKVID_AU FOR PRIKAZ_LIKVID
ACTIVE AFTER UPDATE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'PRIKAZ_LIKVID', 'U', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_PRIKAZ_KIKVID', OLD.N_PRIKAZ_KIKVID);
 
  IF ((OLD.N_PRIKAZ_KIKVID IS NULL AND NEW.N_PRIKAZ_KIKVID IS NOT NULL) OR
      (NEW.N_PRIKAZ_KIKVID IS NULL AND OLD.N_PRIKAZ_KIKVID IS NOT NULL) OR
      (NEW.N_PRIKAZ_KIKVID IS NOT NULL AND OLD.N_PRIKAZ_KIKVID IS NOT NULL AND NEW.N_PRIKAZ_KIKVID <> OLD.N_PRIKAZ_KIKVID)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_PRIKAZ_KIKVID',OLD.N_PRIKAZ_KIKVID, NEW.N_PRIKAZ_KIKVID);
  
  IF ((OLD.NOMER IS NULL AND NEW.NOMER IS NOT NULL) OR
      (NEW.NOMER IS NULL AND OLD.NOMER IS NOT NULL) OR
      (NEW.NOMER IS NOT NULL AND OLD.NOMER IS NOT NULL AND NEW.NOMER <> OLD.NOMER)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'NOMER',OLD.NOMER, NEW.NOMER);
  
  IF ((OLD.YEAR_UCH IS NULL AND NEW.YEAR_UCH IS NOT NULL) OR
      (NEW.YEAR_UCH IS NULL AND OLD.YEAR_UCH IS NOT NULL) OR
      (NEW.YEAR_UCH IS NOT NULL AND OLD.YEAR_UCH IS NOT NULL AND NEW.YEAR_UCH <> OLD.YEAR_UCH)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'YEAR_UCH',OLD.YEAR_UCH, NEW.YEAR_UCH);
  
  IF ((OLD.PRIKAZ IS NULL AND NEW.PRIKAZ IS NOT NULL) OR
      (NEW.PRIKAZ IS NULL AND OLD.PRIKAZ IS NOT NULL) OR
      (NEW.PRIKAZ IS NOT NULL AND OLD.PRIKAZ IS NOT NULL AND NEW.PRIKAZ <> OLD.PRIKAZ)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'PRIKAZ',OLD.PRIKAZ, NEW.PRIKAZ);
  
  IF ((OLD.STATUS_NOMER IS NULL AND NEW.STATUS_NOMER IS NOT NULL) OR
      (NEW.STATUS_NOMER IS NULL AND OLD.STATUS_NOMER IS NOT NULL) OR
      (NEW.STATUS_NOMER IS NOT NULL AND OLD.STATUS_NOMER IS NOT NULL AND NEW.STATUS_NOMER <> OLD.STATUS_NOMER)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'STATUS_NOMER',OLD.STATUS_NOMER, NEW.STATUS_NOMER);
  
  IF ((OLD.DATE_C IS NULL AND NEW.DATE_C IS NOT NULL) OR
      (NEW.DATE_C IS NULL AND OLD.DATE_C IS NOT NULL) OR
      (NEW.DATE_C IS NOT NULL AND OLD.DATE_C IS NOT NULL AND NEW.DATE_C <> OLD.DATE_C)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'DATE_C',OLD.DATE_C, NEW.DATE_C);
  
  IF ((OLD.DATE_PO IS NULL AND NEW.DATE_PO IS NOT NULL) OR
      (NEW.DATE_PO IS NULL AND OLD.DATE_PO IS NOT NULL) OR
      (NEW.DATE_PO IS NOT NULL AND OLD.DATE_PO IS NOT NULL AND NEW.DATE_PO <> OLD.DATE_PO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'DATE_PO',OLD.DATE_PO, NEW.DATE_PO);
  
  IF ((OLD.DESCRIBE IS NULL AND NEW.DESCRIBE IS NOT NULL) OR
      (NEW.DESCRIBE IS NULL AND OLD.DESCRIBE IS NOT NULL) OR
      (NEW.DESCRIBE IS NOT NULL AND OLD.DESCRIBE IS NOT NULL AND NEW.DESCRIBE <> OLD.DESCRIBE)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'DESCRIBE',OLD.DESCRIBE, NEW.DESCRIBE);
  
  IF ((OLD.N_TYPE_LIKVID IS NULL AND NEW.N_TYPE_LIKVID IS NOT NULL) OR
      (NEW.N_TYPE_LIKVID IS NULL AND OLD.N_TYPE_LIKVID IS NOT NULL) OR
      (NEW.N_TYPE_LIKVID IS NOT NULL AND OLD.N_TYPE_LIKVID IS NOT NULL AND NEW.N_TYPE_LIKVID <> OLD.N_TYPE_LIKVID)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_TYPE_LIKVID',OLD.N_TYPE_LIKVID, NEW.N_TYPE_LIKVID);
  
  IF ((OLD.FAC_DO IS NULL AND NEW.FAC_DO IS NOT NULL) OR
      (NEW.FAC_DO IS NULL AND OLD.FAC_DO IS NOT NULL) OR
      (NEW.FAC_DO IS NOT NULL AND OLD.FAC_DO IS NOT NULL AND NEW.FAC_DO <> OLD.FAC_DO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'FAC_DO',OLD.FAC_DO, NEW.FAC_DO);
  
  IF ((OLD.FAC_PO IS NULL AND NEW.FAC_PO IS NOT NULL) OR
      (NEW.FAC_PO IS NULL AND OLD.FAC_PO IS NOT NULL) OR
      (NEW.FAC_PO IS NOT NULL AND OLD.FAC_PO IS NOT NULL AND NEW.FAC_PO <> OLD.FAC_PO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'FAC_PO',OLD.FAC_PO, NEW.FAC_PO);
  
  IF ((OLD.VID_EDU_DO IS NULL AND NEW.VID_EDU_DO IS NOT NULL) OR
      (NEW.VID_EDU_DO IS NULL AND OLD.VID_EDU_DO IS NOT NULL) OR
      (NEW.VID_EDU_DO IS NOT NULL AND OLD.VID_EDU_DO IS NOT NULL AND NEW.VID_EDU_DO <> OLD.VID_EDU_DO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'VID_EDU_DO',OLD.VID_EDU_DO, NEW.VID_EDU_DO);
  
  IF ((OLD.VID_EDU_PO IS NULL AND NEW.VID_EDU_PO IS NOT NULL) OR
      (NEW.VID_EDU_PO IS NULL AND OLD.VID_EDU_PO IS NOT NULL) OR
      (NEW.VID_EDU_PO IS NOT NULL AND OLD.VID_EDU_PO IS NOT NULL AND NEW.VID_EDU_PO <> OLD.VID_EDU_PO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'VID_EDU_PO',OLD.VID_EDU_PO, NEW.VID_EDU_PO);
  
  IF ((OLD.SPECIALIZ_DO IS NULL AND NEW.SPECIALIZ_DO IS NOT NULL) OR
      (NEW.SPECIALIZ_DO IS NULL AND OLD.SPECIALIZ_DO IS NOT NULL) OR
      (NEW.SPECIALIZ_DO IS NOT NULL AND OLD.SPECIALIZ_DO IS NOT NULL AND NEW.SPECIALIZ_DO <> OLD.SPECIALIZ_DO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'SPECIALIZ_DO',OLD.SPECIALIZ_DO, NEW.SPECIALIZ_DO);
  
  IF ((OLD.SPECIALIZ_PO IS NULL AND NEW.SPECIALIZ_PO IS NOT NULL) OR
      (NEW.SPECIALIZ_PO IS NULL AND OLD.SPECIALIZ_PO IS NOT NULL) OR
      (NEW.SPECIALIZ_PO IS NOT NULL AND OLD.SPECIALIZ_PO IS NOT NULL AND NEW.SPECIALIZ_PO <> OLD.SPECIALIZ_PO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'SPECIALIZ_PO',OLD.SPECIALIZ_PO, NEW.SPECIALIZ_PO);
  
  IF ((OLD.KURS_DO IS NULL AND NEW.KURS_DO IS NOT NULL) OR
      (NEW.KURS_DO IS NULL AND OLD.KURS_DO IS NOT NULL) OR
      (NEW.KURS_DO IS NOT NULL AND OLD.KURS_DO IS NOT NULL AND NEW.KURS_DO <> OLD.KURS_DO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'KURS_DO',OLD.KURS_DO, NEW.KURS_DO);
  
  IF ((OLD.KURS_PO IS NULL AND NEW.KURS_PO IS NOT NULL) OR
      (NEW.KURS_PO IS NULL AND OLD.KURS_PO IS NOT NULL) OR
      (NEW.KURS_PO IS NOT NULL AND OLD.KURS_PO IS NOT NULL AND NEW.KURS_PO <> OLD.KURS_PO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'KURS_PO',OLD.KURS_PO, NEW.KURS_PO);
  
  IF ((OLD.N_FOUND_DO IS NULL AND NEW.N_FOUND_DO IS NOT NULL) OR
      (NEW.N_FOUND_DO IS NULL AND OLD.N_FOUND_DO IS NOT NULL) OR
      (NEW.N_FOUND_DO IS NOT NULL AND OLD.N_FOUND_DO IS NOT NULL AND NEW.N_FOUND_DO <> OLD.N_FOUND_DO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_FOUND_DO',OLD.N_FOUND_DO, NEW.N_FOUND_DO);
  
  IF ((OLD.N_FOUND_PO IS NULL AND NEW.N_FOUND_PO IS NOT NULL) OR
      (NEW.N_FOUND_PO IS NULL AND OLD.N_FOUND_PO IS NOT NULL) OR
      (NEW.N_FOUND_PO IS NOT NULL AND OLD.N_FOUND_PO IS NOT NULL AND NEW.N_FOUND_PO <> OLD.N_FOUND_PO)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_FOUND_PO',OLD.N_FOUND_PO, NEW.N_FOUND_PO);
 
  
END
^


/* Trigger: PRIKAZ_LIKVID_BI */
CREATE OR ALTER TRIGGER PRIKAZ_LIKVID_BI FOR PRIKAZ_LIKVID
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.N_PRIKAZ_KIKVID IS NULL) THEN
    NEW.N_PRIKAZ_KIKVID = GEN_ID(GEN_PRIKAZ_LIKVID,1);
END
^

SET TERM ; ^



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON PRIKAZ_LIKVID TO ABITUR1;
GRANT ALL ON PRIKAZ_LIKVID TO ABITUR2;
GRANT ALL ON PRIKAZ_LIKVID TO ABITUR3;
GRANT ALL ON PRIKAZ_LIKVID TO ABITUR4;
GRANT ALL ON PRIKAZ_LIKVID TO ALENA_2109;
GRANT ALL ON PRIKAZ_LIKVID TO ALEXANDER_GONCHAROV;
GRANT ALL ON PRIKAZ_LIKVID TO ALINA_E;
GRANT ALL ON PRIKAZ_LIKVID TO ANNA;
GRANT ALL ON PRIKAZ_LIKVID TO ASPA;
GRANT ALL ON PRIKAZ_LIKVID TO ASPIRANTURA;
GRANT ALL ON PRIKAZ_LIKVID TO ASU;
GRANT ALL ON PRIKAZ_LIKVID TO ASU1;
GRANT ALL ON PRIKAZ_LIKVID TO ASU2;
GRANT ALL ON PRIKAZ_LIKVID TO ASU3;
GRANT ALL ON PRIKAZ_LIKVID TO ASU4;
GRANT ALL ON PRIKAZ_LIKVID TO BAKS16;
GRANT ALL ON PRIKAZ_LIKVID TO BAKS68878;
GRANT ALL ON PRIKAZ_LIKVID TO BOBROVICH_O;
GRANT ALL ON PRIKAZ_LIKVID TO DEVELOPER;
GRANT ALL ON PRIKAZ_LIKVID TO DEVELOPER2;
GRANT ALL ON PRIKAZ_LIKVID TO DOBROVOLSKAYA;
GRANT ALL ON PRIKAZ_LIKVID TO DVORETSKAYA_K;
GRANT ALL ON PRIKAZ_LIKVID TO FACULTY1;
GRANT ALL ON PRIKAZ_LIKVID TO GONCHAROV434_2;
GRANT ALL ON PRIKAZ_LIKVID TO GUNICH_O;
GRANT ALL ON PRIKAZ_LIKVID TO GUNICH_OKSANA;
GRANT ALL ON PRIKAZ_LIKVID TO HOSTEL_PK1;
GRANT ALL ON PRIKAZ_LIKVID TO HOSTEL_PK2;
GRANT ALL ON PRIKAZ_LIKVID TO IMSIT_Z;
GRANT SELECT ON PRIKAZ_LIKVID TO INTER_01;
GRANT SELECT ON PRIKAZ_LIKVID TO INTER_02;
GRANT ALL ON PRIKAZ_LIKVID TO IP_PROJECT;
GRANT ALL ON PRIKAZ_LIKVID TO IRONSKULL;
GRANT ALL ON PRIKAZ_LIKVID TO IT;
GRANT ALL ON PRIKAZ_LIKVID TO IT2;
GRANT ALL ON PRIKAZ_LIKVID TO IT5;
GRANT ALL ON PRIKAZ_LIKVID TO IT6;
GRANT ALL ON PRIKAZ_LIKVID TO IT7;
GRANT ALL ON PRIKAZ_LIKVID TO IT8;
GRANT ALL ON PRIKAZ_LIKVID TO IT_1;
GRANT ALL ON PRIKAZ_LIKVID TO IT_2;
GRANT ALL ON PRIKAZ_LIKVID TO IT_3;
GRANT ALL ON PRIKAZ_LIKVID TO IT_8;
GRANT ALL ON PRIKAZ_LIKVID TO IT_D;
GRANT ALL ON PRIKAZ_LIKVID TO IT_L;
GRANT ALL ON PRIKAZ_LIKVID TO IT_M;
GRANT ALL ON PRIKAZ_LIKVID TO IT_PK;
GRANT ALL ON PRIKAZ_LIKVID TO IT_Z;
GRANT ALL ON PRIKAZ_LIKVID TO IVANOVA_A;
GRANT ALL ON PRIKAZ_LIKVID TO JKMUF2507;
GRANT ALL ON PRIKAZ_LIKVID TO KANDRUKEVICH_M;
GRANT ALL ON PRIKAZ_LIKVID TO KAND_M;
GRANT ALL ON PRIKAZ_LIKVID TO KOSIK_N;
GRANT ALL ON PRIKAZ_LIKVID TO KRISTINA;
GRANT ALL ON PRIKAZ_LIKVID TO LAVRENOVA_V;
GRANT ALL ON PRIKAZ_LIKVID TO LENAUSOVA;
GRANT ALL ON PRIKAZ_LIKVID TO LIASHKOVICH_I;
GRANT ALL ON PRIKAZ_LIKVID TO LTRFYFN2019;
GRANT ALL ON PRIKAZ_LIKVID TO MAGISTR;
GRANT ALL ON PRIKAZ_LIKVID TO MARINA;
GRANT ALL ON PRIKAZ_LIKVID TO MATUSEVICH;
GRANT ALL ON PRIKAZ_LIKVID TO MATUSEVICH_M;
GRANT ALL ON PRIKAZ_LIKVID TO MIMI;
GRANT ALL ON PRIKAZ_LIKVID TO MVS;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_1;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_D;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_D_L;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_ETB;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_G;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_L;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_LP;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_N;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_PK;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_V;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_Z;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_ZAM;
GRANT ALL ON PRIKAZ_LIKVID TO MVS_Z_L;
GRANT ALL ON PRIKAZ_LIKVID TO M_2;
GRANT ALL ON PRIKAZ_LIKVID TO NEW78;
GRANT ALL ON PRIKAZ_LIKVID TO NEWLOGIN;
GRANT ALL ON PRIKAZ_LIKVID TO NEWUSER;
GRANT ALL ON PRIKAZ_LIKVID TO NOVIK_A;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT15;
GRANT ALL ON PRIKAZ_LIKVID TO OFKITA;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_1;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_15;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_A;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_D;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_D_A;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_L;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_M;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_N;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_PK;
GRANT ALL ON PRIKAZ_LIKVID TO OFKIT_Z;
GRANT ALL ON PRIKAZ_LIKVID TO OK;
GRANT ALL ON PRIKAZ_LIKVID TO OK1;
GRANT ALL ON PRIKAZ_LIKVID TO OK2;
GRANT ALL ON PRIKAZ_LIKVID TO OKSANA;
GRANT ALL ON PRIKAZ_LIKVID TO OK_ST;
GRANT ALL ON PRIKAZ_LIKVID TO OK_STUD;
GRANT ALL ON PRIKAZ_LIKVID TO OK_STUD_1;
GRANT ALL ON PRIKAZ_LIKVID TO OK_STUD_2;
GRANT ALL ON PRIKAZ_LIKVID TO OK_STUD_N;
GRANT ALL ON PRIKAZ_LIKVID TO OK_STUD_SL;
GRANT ALL ON PRIKAZ_LIKVID TO OK_STUD_US;
GRANT ALL ON PRIKAZ_LIKVID TO PK;
GRANT ALL ON PRIKAZ_LIKVID TO PK_IT;
GRANT ALL ON PRIKAZ_LIKVID TO PK_IT1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_IT2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_IT3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_IT4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_IT5;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIGP1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIGP2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG_1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG_2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG_3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG_4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG_P1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MSTIG_P2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS5;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVSP1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVSP2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS_1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS_2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS_3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS_4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS_P1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_MVS_P2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKIT;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKIT1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKIT2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKIT3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKIT4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKIT5;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKITP1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFKITP2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFK_1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFK_2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFK_3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFK_4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFK_P1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OFK_P2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OTV1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OTV2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OTV3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_OTV4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE5;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIEP1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIEP2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE_1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE_2;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE_3;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE_4;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE_P1;
GRANT ALL ON PRIKAZ_LIKVID TO PK_SIIE_P2;
GRANT ALL ON PRIKAZ_LIKVID TO PLANIDA_E;
GRANT SELECT ON PRIKAZ_LIKVID TO PRESS_01;
GRANT ALL ON PRIKAZ_LIKVID TO PRIEM1;
GRANT ALL ON PRIKAZ_LIKVID TO SADIK;
GRANT ALL ON PRIKAZ_LIKVID TO SEL_COM;
GRANT ALL ON PRIKAZ_LIKVID TO SERAFIMOVICH_Y;
GRANT ALL ON PRIKAZ_LIKVID TO SETUN1998;
GRANT ALL ON PRIKAZ_LIKVID TO SHMAENKOVA_M;
GRANT ALL ON PRIKAZ_LIKVID TO SHPAKEVICH_P;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE1;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE10;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE12;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE123;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE1234;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE2;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE3;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE4;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE6;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_123;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_2;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_5;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_BELAYA_M;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_D;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_D2;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_LAB;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_LAB_D;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_LAB_Z;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_LAB_Z2;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_LAB_Z3;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_NEW;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_O;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_PK;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_Z;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_Z1;
GRANT ALL ON PRIKAZ_LIKVID TO SIIE_Z12;
GRANT ALL ON PRIKAZ_LIKVID TO SMOLENKOVA_T;
GRANT ALL ON PRIKAZ_LIKVID TO STUD_KADR1;
GRANT ALL ON PRIKAZ_LIKVID TO STUD_KADR2;
GRANT ALL ON PRIKAZ_LIKVID TO STUD_KADR3;
GRANT ALL ON PRIKAZ_LIKVID TO STUD_KADR4;
GRANT ALL ON PRIKAZ_LIKVID TO SVETA;
GRANT ALL ON PRIKAZ_LIKVID TO TEST_PREPOD;
GRANT ALL ON PRIKAZ_LIKVID TO TEST_PROBA;
GRANT ALL ON PRIKAZ_LIKVID TO TEST_STUD;
GRANT ALL ON PRIKAZ_LIKVID TO UHNOVEC;
GRANT ALL ON PRIKAZ_LIKVID TO UO_LAB;
GRANT ALL ON PRIKAZ_LIKVID TO UO_M;
GRANT ALL ON PRIKAZ_LIKVID TO UO_N;
GRANT ALL ON PRIKAZ_LIKVID TO UO_Z;
GRANT ALL ON PRIKAZ_LIKVID TO USER123;
GRANT ALL ON PRIKAZ_LIKVID TO USER622;
GRANT SELECT ON PRIKAZ_LIKVID TO VIEWER1;
GRANT ALL ON PRIKAZ_LIKVID TO VIEWER_MOB;
GRANT ALL ON PRIKAZ_LIKVID TO VNUK;
GRANT ALL ON PRIKAZ_LIKVID TO VOROBEI75;
GRANT ALL ON PRIKAZ_LIKVID TO YA;
GRANT ALL ON PRIKAZ_LIKVID TO YAUHENI_HATSURA;
GRANT ALL ON PRIKAZ_LIKVID TO ZHANNA_73;

/* Privileges of triggers */
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$PRIKAZ_LIKVID_AD;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$PRIKAZ_LIKVID_AD;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$PRIKAZ_LIKVID_AD;
GRANT UPDATE, REFERENCES ON PRIKAZ_LIKVID TO TRIGGER IBE$PRIKAZ_LIKVID_AD;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$PRIKAZ_LIKVID_AI;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$PRIKAZ_LIKVID_AI;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$PRIKAZ_LIKVID_AI;
GRANT UPDATE, REFERENCES ON PRIKAZ_LIKVID TO TRIGGER IBE$PRIKAZ_LIKVID_AI;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$PRIKAZ_LIKVID_AU;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$PRIKAZ_LIKVID_AU;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$PRIKAZ_LIKVID_AU;
GRANT UPDATE, REFERENCES ON PRIKAZ_LIKVID TO TRIGGER IBE$PRIKAZ_LIKVID_AU;