/******************************************************************************/
/***               Generated by IBExpert 01.07.2022 15:54:42                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/


/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR IBE$LOG_TABLES_GEN;

CREATE TABLE VEDOMOST_LIKVID (
    N_VED         INTEGER,
    N_VEDOMOST    SMALLINT,
    D_VED         DATE,
    SEMESTR_VED   SMALLINT,
    FIO_EXAM      VARCHAR(40) COLLATE PXW_CYRL,
    STATUS        SMALLINT,
    N_PLAN        INTEGER,
    N_FAC         SMALLINT,
    END_D_EXAM    DATE,
    NOMER         INTEGER,
    STATUS_NOMER  SMALLINT,
    KURS          SMALLINT,
    YEAR_UCH      SMALLINT,
    BALL          SMALLINT,
    D_EXAM        DATE,
    N_GROUP       SMALLINT
);




/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE VEDOMOST_LIKVID ADD PRIMARY KEY (N_VED);


/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/

ALTER TABLE VEDOMOST_LIKVID ADD FOREIGN KEY (N_PLAN) REFERENCES EDU_PLAN (N_PLAN);
ALTER TABLE VEDOMOST_LIKVID ADD FOREIGN KEY (NOMER) REFERENCES PEOPLE (NOMER);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX I_VED_LIKVID_GOD ON VEDOMOST_LIKVID (YEAR_UCH);
CREATE INDEX I_VED_LIKVID_NOMER ON VEDOMOST_LIKVID (NOMER);
CREATE INDEX I_VED_LIKVID_VEDOMOST ON VEDOMOST_LIKVID (N_VEDOMOST);
CREATE INDEX I_VED_RATING_PLAN ON VEDOMOST_LIKVID (N_PLAN);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: IBE$VEDOMOST_LIKVID_AD */
CREATE OR ALTER TRIGGER IBE$VEDOMOST_LIKVID_AD FOR VEDOMOST_LIKVID
ACTIVE AFTER DELETE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'VEDOMOST_LIKVID', 'D', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_VED', OLD.N_VED);
 
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_VED',OLD.N_VED, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_VEDOMOST',OLD.N_VEDOMOST, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'D_VED',OLD.D_VED, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'SEMESTR_VED',OLD.SEMESTR_VED, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'FIO_EXAM',OLD.FIO_EXAM, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'STATUS',OLD.STATUS, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_PLAN',OLD.N_PLAN, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_FAC',OLD.N_FAC, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'END_D_EXAM',OLD.END_D_EXAM, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'NOMER',OLD.NOMER, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'STATUS_NOMER',OLD.STATUS_NOMER, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'KURS',OLD.KURS, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'YEAR_UCH',OLD.YEAR_UCH, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'BALL',OLD.BALL, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'D_EXAM',OLD.D_EXAM, NULL);
 
  
END
^


/* Trigger: IBE$VEDOMOST_LIKVID_AI */
CREATE OR ALTER TRIGGER IBE$VEDOMOST_LIKVID_AI FOR VEDOMOST_LIKVID
ACTIVE AFTER INSERT POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'VEDOMOST_LIKVID', 'I', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_VED', NEW.N_VED);
 
  IF (NOT (NEW.N_VED IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_VED', NULL, NEW.N_VED);
  
  IF (NOT (NEW.N_VEDOMOST IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_VEDOMOST', NULL, NEW.N_VEDOMOST);
  
  IF (NOT (NEW.D_VED IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'D_VED', NULL, NEW.D_VED);
  
  IF (NOT (NEW.SEMESTR_VED IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'SEMESTR_VED', NULL, NEW.SEMESTR_VED);
  
  IF (NOT (NEW.FIO_EXAM IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'FIO_EXAM', NULL, NEW.FIO_EXAM);
  
  IF (NOT (NEW.STATUS IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'STATUS', NULL, NEW.STATUS);
  
  IF (NOT (NEW.N_PLAN IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_PLAN', NULL, NEW.N_PLAN);
  
  IF (NOT (NEW.N_FAC IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_FAC', NULL, NEW.N_FAC);
  
  IF (NOT (NEW.END_D_EXAM IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'END_D_EXAM', NULL, NEW.END_D_EXAM);
  
  IF (NOT (NEW.NOMER IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'NOMER', NULL, NEW.NOMER);
  
  IF (NOT (NEW.STATUS_NOMER IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'STATUS_NOMER', NULL, NEW.STATUS_NOMER);
  
  IF (NOT (NEW.KURS IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'KURS', NULL, NEW.KURS);
  
  IF (NOT (NEW.YEAR_UCH IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'YEAR_UCH', NULL, NEW.YEAR_UCH);
  
  IF (NOT (NEW.BALL IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'BALL', NULL, NEW.BALL);
  
  IF (NOT (NEW.D_EXAM IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'D_EXAM', NULL, NEW.D_EXAM);
 
  
END
^


/* Trigger: IBE$VEDOMOST_LIKVID_AU */
CREATE OR ALTER TRIGGER IBE$VEDOMOST_LIKVID_AU FOR VEDOMOST_LIKVID
ACTIVE AFTER UPDATE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'VEDOMOST_LIKVID', 'U', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_VED', OLD.N_VED);
 
  IF ((OLD.N_VED IS NULL AND NEW.N_VED IS NOT NULL) OR
      (NEW.N_VED IS NULL AND OLD.N_VED IS NOT NULL) OR
      (NEW.N_VED IS NOT NULL AND OLD.N_VED IS NOT NULL AND NEW.N_VED <> OLD.N_VED)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_VED',OLD.N_VED, NEW.N_VED);
  
  IF ((OLD.N_VEDOMOST IS NULL AND NEW.N_VEDOMOST IS NOT NULL) OR
      (NEW.N_VEDOMOST IS NULL AND OLD.N_VEDOMOST IS NOT NULL) OR
      (NEW.N_VEDOMOST IS NOT NULL AND OLD.N_VEDOMOST IS NOT NULL AND NEW.N_VEDOMOST <> OLD.N_VEDOMOST)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_VEDOMOST',OLD.N_VEDOMOST, NEW.N_VEDOMOST);
  
  IF ((OLD.D_VED IS NULL AND NEW.D_VED IS NOT NULL) OR
      (NEW.D_VED IS NULL AND OLD.D_VED IS NOT NULL) OR
      (NEW.D_VED IS NOT NULL AND OLD.D_VED IS NOT NULL AND NEW.D_VED <> OLD.D_VED)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'D_VED',OLD.D_VED, NEW.D_VED);
  
  IF ((OLD.SEMESTR_VED IS NULL AND NEW.SEMESTR_VED IS NOT NULL) OR
      (NEW.SEMESTR_VED IS NULL AND OLD.SEMESTR_VED IS NOT NULL) OR
      (NEW.SEMESTR_VED IS NOT NULL AND OLD.SEMESTR_VED IS NOT NULL AND NEW.SEMESTR_VED <> OLD.SEMESTR_VED)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'SEMESTR_VED',OLD.SEMESTR_VED, NEW.SEMESTR_VED);
  
  IF ((OLD.FIO_EXAM IS NULL AND NEW.FIO_EXAM IS NOT NULL) OR
      (NEW.FIO_EXAM IS NULL AND OLD.FIO_EXAM IS NOT NULL) OR
      (NEW.FIO_EXAM IS NOT NULL AND OLD.FIO_EXAM IS NOT NULL AND NEW.FIO_EXAM <> OLD.FIO_EXAM)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'FIO_EXAM',OLD.FIO_EXAM, NEW.FIO_EXAM);
  
  IF ((OLD.STATUS IS NULL AND NEW.STATUS IS NOT NULL) OR
      (NEW.STATUS IS NULL AND OLD.STATUS IS NOT NULL) OR
      (NEW.STATUS IS NOT NULL AND OLD.STATUS IS NOT NULL AND NEW.STATUS <> OLD.STATUS)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'STATUS',OLD.STATUS, NEW.STATUS);
  
  IF ((OLD.N_PLAN IS NULL AND NEW.N_PLAN IS NOT NULL) OR
      (NEW.N_PLAN IS NULL AND OLD.N_PLAN IS NOT NULL) OR
      (NEW.N_PLAN IS NOT NULL AND OLD.N_PLAN IS NOT NULL AND NEW.N_PLAN <> OLD.N_PLAN)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_PLAN',OLD.N_PLAN, NEW.N_PLAN);
  
  IF ((OLD.N_FAC IS NULL AND NEW.N_FAC IS NOT NULL) OR
      (NEW.N_FAC IS NULL AND OLD.N_FAC IS NOT NULL) OR
      (NEW.N_FAC IS NOT NULL AND OLD.N_FAC IS NOT NULL AND NEW.N_FAC <> OLD.N_FAC)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_FAC',OLD.N_FAC, NEW.N_FAC);
  
  IF ((OLD.END_D_EXAM IS NULL AND NEW.END_D_EXAM IS NOT NULL) OR
      (NEW.END_D_EXAM IS NULL AND OLD.END_D_EXAM IS NOT NULL) OR
      (NEW.END_D_EXAM IS NOT NULL AND OLD.END_D_EXAM IS NOT NULL AND NEW.END_D_EXAM <> OLD.END_D_EXAM)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'END_D_EXAM',OLD.END_D_EXAM, NEW.END_D_EXAM);
  
  IF ((OLD.NOMER IS NULL AND NEW.NOMER IS NOT NULL) OR
      (NEW.NOMER IS NULL AND OLD.NOMER IS NOT NULL) OR
      (NEW.NOMER IS NOT NULL AND OLD.NOMER IS NOT NULL AND NEW.NOMER <> OLD.NOMER)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'NOMER',OLD.NOMER, NEW.NOMER);
  
  IF ((OLD.STATUS_NOMER IS NULL AND NEW.STATUS_NOMER IS NOT NULL) OR
      (NEW.STATUS_NOMER IS NULL AND OLD.STATUS_NOMER IS NOT NULL) OR
      (NEW.STATUS_NOMER IS NOT NULL AND OLD.STATUS_NOMER IS NOT NULL AND NEW.STATUS_NOMER <> OLD.STATUS_NOMER)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'STATUS_NOMER',OLD.STATUS_NOMER, NEW.STATUS_NOMER);
  
  IF ((OLD.KURS IS NULL AND NEW.KURS IS NOT NULL) OR
      (NEW.KURS IS NULL AND OLD.KURS IS NOT NULL) OR
      (NEW.KURS IS NOT NULL AND OLD.KURS IS NOT NULL AND NEW.KURS <> OLD.KURS)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'KURS',OLD.KURS, NEW.KURS);
  
  IF ((OLD.YEAR_UCH IS NULL AND NEW.YEAR_UCH IS NOT NULL) OR
      (NEW.YEAR_UCH IS NULL AND OLD.YEAR_UCH IS NOT NULL) OR
      (NEW.YEAR_UCH IS NOT NULL AND OLD.YEAR_UCH IS NOT NULL AND NEW.YEAR_UCH <> OLD.YEAR_UCH)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'YEAR_UCH',OLD.YEAR_UCH, NEW.YEAR_UCH);
  
  IF ((OLD.BALL IS NULL AND NEW.BALL IS NOT NULL) OR
      (NEW.BALL IS NULL AND OLD.BALL IS NOT NULL) OR
      (NEW.BALL IS NOT NULL AND OLD.BALL IS NOT NULL AND NEW.BALL <> OLD.BALL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'BALL',OLD.BALL, NEW.BALL);
  
  IF ((OLD.D_EXAM IS NULL AND NEW.D_EXAM IS NOT NULL) OR
      (NEW.D_EXAM IS NULL AND OLD.D_EXAM IS NOT NULL) OR
      (NEW.D_EXAM IS NOT NULL AND OLD.D_EXAM IS NOT NULL AND NEW.D_EXAM <> OLD.D_EXAM)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'D_EXAM',OLD.D_EXAM, NEW.D_EXAM);
 
  
END
^

SET TERM ; ^



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON VEDOMOST_LIKVID TO ABITUR1;
GRANT ALL ON VEDOMOST_LIKVID TO ABITUR2;
GRANT ALL ON VEDOMOST_LIKVID TO ABITUR3;
GRANT ALL ON VEDOMOST_LIKVID TO ABITUR4;
GRANT ALL ON VEDOMOST_LIKVID TO ALENA_2109;
GRANT ALL ON VEDOMOST_LIKVID TO ALEXANDER_GONCHAROV;
GRANT ALL ON VEDOMOST_LIKVID TO ALINA_E;
GRANT ALL ON VEDOMOST_LIKVID TO ANNA;
GRANT ALL ON VEDOMOST_LIKVID TO ASPA;
GRANT ALL ON VEDOMOST_LIKVID TO ASPIRANTURA;
GRANT ALL ON VEDOMOST_LIKVID TO ASU;
GRANT ALL ON VEDOMOST_LIKVID TO ASU1;
GRANT ALL ON VEDOMOST_LIKVID TO ASU2;
GRANT ALL ON VEDOMOST_LIKVID TO ASU3;
GRANT ALL ON VEDOMOST_LIKVID TO ASU4;
GRANT ALL ON VEDOMOST_LIKVID TO BAKS16;
GRANT ALL ON VEDOMOST_LIKVID TO BAKS68878;
GRANT ALL ON VEDOMOST_LIKVID TO BOBROVICH_O;
GRANT ALL ON VEDOMOST_LIKVID TO DEVELOPER;
GRANT ALL ON VEDOMOST_LIKVID TO DEVELOPER2;
GRANT ALL ON VEDOMOST_LIKVID TO DOBROVOLSKAYA;
GRANT ALL ON VEDOMOST_LIKVID TO DVORETSKAYA_K;
GRANT ALL ON VEDOMOST_LIKVID TO FACULTY1;
GRANT ALL ON VEDOMOST_LIKVID TO GONCHAROV434_2;
GRANT ALL ON VEDOMOST_LIKVID TO GUNICH_O;
GRANT ALL ON VEDOMOST_LIKVID TO GUNICH_OKSANA;
GRANT ALL ON VEDOMOST_LIKVID TO HOSTEL_PK1;
GRANT ALL ON VEDOMOST_LIKVID TO HOSTEL_PK2;
GRANT ALL ON VEDOMOST_LIKVID TO IMSIT_Z;
GRANT SELECT ON VEDOMOST_LIKVID TO INTER_01;
GRANT SELECT ON VEDOMOST_LIKVID TO INTER_02;
GRANT ALL ON VEDOMOST_LIKVID TO IP_PROJECT;
GRANT ALL ON VEDOMOST_LIKVID TO IRONSKULL;
GRANT ALL ON VEDOMOST_LIKVID TO IT;
GRANT ALL ON VEDOMOST_LIKVID TO IT2;
GRANT ALL ON VEDOMOST_LIKVID TO IT5;
GRANT ALL ON VEDOMOST_LIKVID TO IT6;
GRANT ALL ON VEDOMOST_LIKVID TO IT7;
GRANT ALL ON VEDOMOST_LIKVID TO IT8;
GRANT ALL ON VEDOMOST_LIKVID TO IT_1;
GRANT ALL ON VEDOMOST_LIKVID TO IT_2;
GRANT ALL ON VEDOMOST_LIKVID TO IT_3;
GRANT ALL ON VEDOMOST_LIKVID TO IT_8;
GRANT ALL ON VEDOMOST_LIKVID TO IT_D;
GRANT ALL ON VEDOMOST_LIKVID TO IT_L;
GRANT ALL ON VEDOMOST_LIKVID TO IT_M;
GRANT ALL ON VEDOMOST_LIKVID TO IT_PK;
GRANT ALL ON VEDOMOST_LIKVID TO IT_Z;
GRANT ALL ON VEDOMOST_LIKVID TO IVANOVA_A;
GRANT ALL ON VEDOMOST_LIKVID TO JKMUF2507;
GRANT ALL ON VEDOMOST_LIKVID TO KANDRUKEVICH_M;
GRANT ALL ON VEDOMOST_LIKVID TO KAND_M;
GRANT ALL ON VEDOMOST_LIKVID TO KOSIK_N;
GRANT ALL ON VEDOMOST_LIKVID TO KRISTINA;
GRANT ALL ON VEDOMOST_LIKVID TO LAVRENOVA_V;
GRANT ALL ON VEDOMOST_LIKVID TO LENAUSOVA;
GRANT ALL ON VEDOMOST_LIKVID TO LIASHKOVICH_I;
GRANT ALL ON VEDOMOST_LIKVID TO LTRFYFN2019;
GRANT ALL ON VEDOMOST_LIKVID TO MAGISTR;
GRANT ALL ON VEDOMOST_LIKVID TO MARINA;
GRANT ALL ON VEDOMOST_LIKVID TO MATUSEVICH;
GRANT ALL ON VEDOMOST_LIKVID TO MIMI;
GRANT ALL ON VEDOMOST_LIKVID TO MVS;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_1;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_D;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_D_L;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_ETB;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_G;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_L;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_LP;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_N;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_PK;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_V;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_Z;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_ZAM;
GRANT ALL ON VEDOMOST_LIKVID TO MVS_Z_L;
GRANT ALL ON VEDOMOST_LIKVID TO M_2;
GRANT ALL ON VEDOMOST_LIKVID TO NEW78;
GRANT ALL ON VEDOMOST_LIKVID TO NEWLOGIN;
GRANT ALL ON VEDOMOST_LIKVID TO NEWUSER;
GRANT ALL ON VEDOMOST_LIKVID TO NOVIK_A;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT15;
GRANT ALL ON VEDOMOST_LIKVID TO OFKITA;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_1;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_15;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_A;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_D;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_D_A;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_L;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_LAB;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_M;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_N;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_PK;
GRANT ALL ON VEDOMOST_LIKVID TO OFKIT_Z;
GRANT ALL ON VEDOMOST_LIKVID TO OK;
GRANT ALL ON VEDOMOST_LIKVID TO OK1;
GRANT ALL ON VEDOMOST_LIKVID TO OK2;
GRANT ALL ON VEDOMOST_LIKVID TO OKSANA;
GRANT ALL ON VEDOMOST_LIKVID TO OK_ST;
GRANT ALL ON VEDOMOST_LIKVID TO OK_STUD;
GRANT ALL ON VEDOMOST_LIKVID TO OK_STUD_1;
GRANT ALL ON VEDOMOST_LIKVID TO OK_STUD_2;
GRANT ALL ON VEDOMOST_LIKVID TO OK_STUD_N;
GRANT ALL ON VEDOMOST_LIKVID TO OK_STUD_SL;
GRANT ALL ON VEDOMOST_LIKVID TO OK_STUD_US;
GRANT ALL ON VEDOMOST_LIKVID TO PK;
GRANT ALL ON VEDOMOST_LIKVID TO PK_IT;
GRANT ALL ON VEDOMOST_LIKVID TO PK_IT1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_IT2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_IT3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_IT4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_IT5;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIGP1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIGP2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG_1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG_2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG_3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG_4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG_P1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MSTIG_P2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS5;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVSP1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVSP2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS_1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS_2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS_3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS_4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS_P1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_MVS_P2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKIT;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKIT1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKIT2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKIT3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKIT4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKIT5;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKITP1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFKITP2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFK_1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFK_2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFK_3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFK_4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFK_P1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OFK_P2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OTV1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OTV2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OTV3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_OTV4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE5;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIEP1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIEP2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE_1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE_2;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE_3;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE_4;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE_P1;
GRANT ALL ON VEDOMOST_LIKVID TO PK_SIIE_P2;
GRANT ALL ON VEDOMOST_LIKVID TO PLANIDA_E;
GRANT SELECT ON VEDOMOST_LIKVID TO PRESS_01;
GRANT ALL ON VEDOMOST_LIKVID TO PRIEM1;
GRANT ALL ON VEDOMOST_LIKVID TO SADIK;
GRANT ALL ON VEDOMOST_LIKVID TO SEL_COM;
GRANT ALL ON VEDOMOST_LIKVID TO SERAFIMOVICH_Y;
GRANT ALL ON VEDOMOST_LIKVID TO SETUN1998;
GRANT ALL ON VEDOMOST_LIKVID TO SHMAENKOVA_M;
GRANT ALL ON VEDOMOST_LIKVID TO SHPAKEVICH_P;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE1;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE10;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE12;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE123;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE1234;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE2;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE3;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE4;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE6;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_123;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_2;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_5;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_BELAYA_M;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_D;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_D2;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_LAB;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_LAB_D;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_LAB_Z;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_LAB_Z2;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_LAB_Z3;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_NEW;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_O;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_PK;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_Z;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_Z1;
GRANT ALL ON VEDOMOST_LIKVID TO SIIE_Z12;
GRANT ALL ON VEDOMOST_LIKVID TO SMOLENKOVA_T;
GRANT ALL ON VEDOMOST_LIKVID TO STUD_KADR1;
GRANT ALL ON VEDOMOST_LIKVID TO STUD_KADR2;
GRANT ALL ON VEDOMOST_LIKVID TO STUD_KADR3;
GRANT ALL ON VEDOMOST_LIKVID TO STUD_KADR4;
GRANT ALL ON VEDOMOST_LIKVID TO SVETA;
GRANT ALL ON VEDOMOST_LIKVID TO TEST_PREPOD;
GRANT ALL ON VEDOMOST_LIKVID TO TEST_PROBA;
GRANT ALL ON VEDOMOST_LIKVID TO TEST_STUD;
GRANT ALL ON VEDOMOST_LIKVID TO UHNOVEC;
GRANT ALL ON VEDOMOST_LIKVID TO UO_LAB;
GRANT ALL ON VEDOMOST_LIKVID TO UO_M;
GRANT ALL ON VEDOMOST_LIKVID TO UO_N;
GRANT ALL ON VEDOMOST_LIKVID TO UO_Z;
GRANT ALL ON VEDOMOST_LIKVID TO USER123;
GRANT ALL ON VEDOMOST_LIKVID TO USER622;
GRANT SELECT ON VEDOMOST_LIKVID TO VIEWER1;
GRANT ALL ON VEDOMOST_LIKVID TO VIEWER_MOB;
GRANT ALL ON VEDOMOST_LIKVID TO VNUK;
GRANT ALL ON VEDOMOST_LIKVID TO VOROBEI75;
GRANT ALL ON VEDOMOST_LIKVID TO YA;
GRANT ALL ON VEDOMOST_LIKVID TO YAUHENI_HATSURA;
GRANT ALL ON VEDOMOST_LIKVID TO ZHANNA_73;

/* Privileges of triggers */
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$VEDOMOST_LIKVID_AD;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$VEDOMOST_LIKVID_AD;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$VEDOMOST_LIKVID_AD;
GRANT UPDATE, REFERENCES ON RATING TO TRIGGER IBE$VEDOMOST_LIKVID_AD;
GRANT UPDATE, REFERENCES ON VEDOMOST_LIKVID TO TRIGGER IBE$VEDOMOST_LIKVID_AD;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$VEDOMOST_LIKVID_AI;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$VEDOMOST_LIKVID_AI;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$VEDOMOST_LIKVID_AI;
GRANT UPDATE, REFERENCES ON RATING TO TRIGGER IBE$VEDOMOST_LIKVID_AI;
GRANT UPDATE, REFERENCES ON VEDOMOST_LIKVID TO TRIGGER IBE$VEDOMOST_LIKVID_AI;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$VEDOMOST_LIKVID_AU;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$VEDOMOST_LIKVID_AU;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$VEDOMOST_LIKVID_AU;
GRANT UPDATE, REFERENCES ON RATING TO TRIGGER IBE$VEDOMOST_LIKVID_AU;
GRANT UPDATE, REFERENCES ON VEDOMOST_LIKVID TO TRIGGER IBE$VEDOMOST_LIKVID_AU;