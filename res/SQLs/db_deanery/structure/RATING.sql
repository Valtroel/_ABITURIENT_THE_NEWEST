/******************************************************************************/
/***               Generated by IBExpert 01.07.2022 15:09:39                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/


/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR IBE$LOG_TABLES_GEN;
CREATE GENERATOR GEN_RATING_ID;

CREATE TABLE RATING (
    N_RATING      INTEGER,
    N_VED_RATING  INTEGER,
    NOMER         INTEGER,
    BALL_R        INTEGER,
    R_FAC         INTEGER,
    R_KURS        INTEGER,
    R_GROUP       INTEGER,
    R_DOP         INTEGER
);




/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE RATING ADD CONSTRAINT PK_RATING PRIMARY KEY (N_RATING);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: IBE$RATING_AD */
CREATE OR ALTER TRIGGER IBE$RATING_AD FOR RATING
ACTIVE AFTER DELETE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'RATING', 'D', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_RATING', OLD.N_RATING);
 
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_RATING',OLD.N_RATING, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_VED_RATING',OLD.N_VED_RATING, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'NOMER',OLD.NOMER, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'BALL_R',OLD.BALL_R, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'R_FAC',OLD.R_FAC, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'R_KURS',OLD.R_KURS, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'R_GROUP',OLD.R_GROUP, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'R_DOP',OLD.R_DOP, NULL);
 
  
END
^


/* Trigger: IBE$RATING_AI */
CREATE OR ALTER TRIGGER IBE$RATING_AI FOR RATING
ACTIVE AFTER INSERT POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'RATING', 'I', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_RATING', NEW.N_RATING);
 
  IF (NOT (NEW.N_RATING IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_RATING', NULL, NEW.N_RATING);
  
  IF (NOT (NEW.N_VED_RATING IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_VED_RATING', NULL, NEW.N_VED_RATING);
  
  IF (NOT (NEW.NOMER IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'NOMER', NULL, NEW.NOMER);
  
  IF (NOT (NEW.BALL_R IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'BALL_R', NULL, NEW.BALL_R);
  
  IF (NOT (NEW.R_FAC IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'R_FAC', NULL, NEW.R_FAC);
  
  IF (NOT (NEW.R_KURS IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'R_KURS', NULL, NEW.R_KURS);
  
  IF (NOT (NEW.R_GROUP IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'R_GROUP', NULL, NEW.R_GROUP);
  
  IF (NOT (NEW.R_DOP IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'R_DOP', NULL, NEW.R_DOP);
 
  
END
^


/* Trigger: IBE$RATING_AU */
CREATE OR ALTER TRIGGER IBE$RATING_AU FOR RATING
ACTIVE AFTER UPDATE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'RATING', 'U', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_RATING', OLD.N_RATING);
 
  IF ((OLD.N_RATING IS NULL AND NEW.N_RATING IS NOT NULL) OR
      (NEW.N_RATING IS NULL AND OLD.N_RATING IS NOT NULL) OR
      (NEW.N_RATING IS NOT NULL AND OLD.N_RATING IS NOT NULL AND NEW.N_RATING <> OLD.N_RATING)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_RATING',OLD.N_RATING, NEW.N_RATING);
  
  IF ((OLD.N_VED_RATING IS NULL AND NEW.N_VED_RATING IS NOT NULL) OR
      (NEW.N_VED_RATING IS NULL AND OLD.N_VED_RATING IS NOT NULL) OR
      (NEW.N_VED_RATING IS NOT NULL AND OLD.N_VED_RATING IS NOT NULL AND NEW.N_VED_RATING <> OLD.N_VED_RATING)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_VED_RATING',OLD.N_VED_RATING, NEW.N_VED_RATING);
  
  IF ((OLD.NOMER IS NULL AND NEW.NOMER IS NOT NULL) OR
      (NEW.NOMER IS NULL AND OLD.NOMER IS NOT NULL) OR
      (NEW.NOMER IS NOT NULL AND OLD.NOMER IS NOT NULL AND NEW.NOMER <> OLD.NOMER)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'NOMER',OLD.NOMER, NEW.NOMER);
  
  IF ((OLD.BALL_R IS NULL AND NEW.BALL_R IS NOT NULL) OR
      (NEW.BALL_R IS NULL AND OLD.BALL_R IS NOT NULL) OR
      (NEW.BALL_R IS NOT NULL AND OLD.BALL_R IS NOT NULL AND NEW.BALL_R <> OLD.BALL_R)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'BALL_R',OLD.BALL_R, NEW.BALL_R);
  
  IF ((OLD.R_FAC IS NULL AND NEW.R_FAC IS NOT NULL) OR
      (NEW.R_FAC IS NULL AND OLD.R_FAC IS NOT NULL) OR
      (NEW.R_FAC IS NOT NULL AND OLD.R_FAC IS NOT NULL AND NEW.R_FAC <> OLD.R_FAC)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'R_FAC',OLD.R_FAC, NEW.R_FAC);
  
  IF ((OLD.R_KURS IS NULL AND NEW.R_KURS IS NOT NULL) OR
      (NEW.R_KURS IS NULL AND OLD.R_KURS IS NOT NULL) OR
      (NEW.R_KURS IS NOT NULL AND OLD.R_KURS IS NOT NULL AND NEW.R_KURS <> OLD.R_KURS)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'R_KURS',OLD.R_KURS, NEW.R_KURS);
  
  IF ((OLD.R_GROUP IS NULL AND NEW.R_GROUP IS NOT NULL) OR
      (NEW.R_GROUP IS NULL AND OLD.R_GROUP IS NOT NULL) OR
      (NEW.R_GROUP IS NOT NULL AND OLD.R_GROUP IS NOT NULL AND NEW.R_GROUP <> OLD.R_GROUP)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'R_GROUP',OLD.R_GROUP, NEW.R_GROUP);
  
  IF ((OLD.R_DOP IS NULL AND NEW.R_DOP IS NOT NULL) OR
      (NEW.R_DOP IS NULL AND OLD.R_DOP IS NOT NULL) OR
      (NEW.R_DOP IS NOT NULL AND OLD.R_DOP IS NOT NULL AND NEW.R_DOP <> OLD.R_DOP)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'R_DOP',OLD.R_DOP, NEW.R_DOP);
 
  
END
^


/* Trigger: RATING_BI */
CREATE OR ALTER TRIGGER RATING_BI FOR RATING
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.N_RATING IS NULL) THEN
    NEW.N_RATING = GEN_ID(GEN_RATING_ID,1);
END
^

SET TERM ; ^



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

COMMENT ON COLUMN RATING.N_RATING IS 
'Инкремент';

COMMENT ON COLUMN RATING.N_VED_RATING IS 
'Инкремент ведомости из табл Vedomost_Rating';

COMMENT ON COLUMN RATING.NOMER IS 
'Номер студента из табл People';

COMMENT ON COLUMN RATING.BALL_R IS 
'Балл по ведомости';

COMMENT ON COLUMN RATING.R_FAC IS 
'Рейтинг по факультету';

COMMENT ON COLUMN RATING.R_KURS IS 
'Рейтинг по курсу';

COMMENT ON COLUMN RATING.R_GROUP IS 
'Рейтинг по группе';

COMMENT ON COLUMN RATING.R_DOP IS 
'Дополнительное поле для рейтинга';



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON RATING TO ABITUR1;
GRANT ALL ON RATING TO ABITUR2;
GRANT ALL ON RATING TO ABITUR3;
GRANT ALL ON RATING TO ABITUR4;
GRANT ALL ON RATING TO ALENA_2109;
GRANT ALL ON RATING TO ALEXANDER_GONCHAROV;
GRANT ALL ON RATING TO ALINA_E;
GRANT ALL ON RATING TO ANNA;
GRANT ALL ON RATING TO ASPA;
GRANT ALL ON RATING TO ASPIRANTURA;
GRANT ALL ON RATING TO ASU;
GRANT ALL ON RATING TO ASU1;
GRANT ALL ON RATING TO ASU2;
GRANT ALL ON RATING TO ASU3;
GRANT ALL ON RATING TO ASU4;
GRANT ALL ON RATING TO BAKS16;
GRANT ALL ON RATING TO BAKS68878;
GRANT ALL ON RATING TO BOBROVICH_O;
GRANT ALL ON RATING TO DEVELOPER;
GRANT ALL ON RATING TO DEVELOPER2;
GRANT ALL ON RATING TO DOBROVOLSKAYA;
GRANT ALL ON RATING TO DVORETSKAYA_K;
GRANT ALL ON RATING TO FACULTY1;
GRANT ALL ON RATING TO GONCHAROV434_2;
GRANT ALL ON RATING TO GUNICH_O;
GRANT ALL ON RATING TO GUNICH_OKSANA;
GRANT ALL ON RATING TO HOSTEL_PK1;
GRANT ALL ON RATING TO HOSTEL_PK2;
GRANT ALL ON RATING TO IMSIT_Z;
GRANT SELECT ON RATING TO INTER_01;
GRANT SELECT ON RATING TO INTER_02;
GRANT ALL ON RATING TO IP_PROJECT;
GRANT ALL ON RATING TO IRONSKULL;
GRANT ALL ON RATING TO IT;
GRANT ALL ON RATING TO IT2;
GRANT ALL ON RATING TO IT5;
GRANT ALL ON RATING TO IT6;
GRANT ALL ON RATING TO IT7;
GRANT ALL ON RATING TO IT8;
GRANT ALL ON RATING TO IT_1;
GRANT ALL ON RATING TO IT_2;
GRANT ALL ON RATING TO IT_3;
GRANT ALL ON RATING TO IT_8;
GRANT ALL ON RATING TO IT_D;
GRANT ALL ON RATING TO IT_L;
GRANT ALL ON RATING TO IT_M;
GRANT ALL ON RATING TO IT_PK;
GRANT ALL ON RATING TO IT_Z;
GRANT ALL ON RATING TO IVANOVA_A;
GRANT ALL ON RATING TO JKMUF2507;
GRANT ALL ON RATING TO KANDRUKEVICH_M;
GRANT ALL ON RATING TO KAND_M;
GRANT ALL ON RATING TO KOSIK_N;
GRANT ALL ON RATING TO KRISTINA;
GRANT ALL ON RATING TO LAVRENOVA_V;
GRANT ALL ON RATING TO LENAUSOVA;
GRANT ALL ON RATING TO LIASHKOVICH_I;
GRANT ALL ON RATING TO LTRFYFN2019;
GRANT ALL ON RATING TO MAGISTR;
GRANT ALL ON RATING TO MARINA;
GRANT ALL ON RATING TO MATUSEVICH;
GRANT ALL ON RATING TO MATUSEVICH_M;
GRANT ALL ON RATING TO MIMI;
GRANT ALL ON RATING TO MVS;
GRANT ALL ON RATING TO MVS_1;
GRANT ALL ON RATING TO MVS_D;
GRANT ALL ON RATING TO MVS_D_L;
GRANT ALL ON RATING TO MVS_ETB;
GRANT ALL ON RATING TO MVS_G;
GRANT ALL ON RATING TO MVS_L;
GRANT ALL ON RATING TO MVS_LP;
GRANT ALL ON RATING TO MVS_N;
GRANT ALL ON RATING TO MVS_PK;
GRANT ALL ON RATING TO MVS_V;
GRANT ALL ON RATING TO MVS_Z;
GRANT ALL ON RATING TO MVS_ZAM;
GRANT ALL ON RATING TO MVS_Z_L;
GRANT ALL ON RATING TO M_2;
GRANT ALL ON RATING TO NEW78;
GRANT ALL ON RATING TO NEWLOGIN;
GRANT ALL ON RATING TO NEWUSER;
GRANT ALL ON RATING TO NOVIK_A;
GRANT ALL ON RATING TO OFKIT15;
GRANT ALL ON RATING TO OFKITA;
GRANT ALL ON RATING TO OFKIT_1;
GRANT ALL ON RATING TO OFKIT_15;
GRANT ALL ON RATING TO OFKIT_A;
GRANT ALL ON RATING TO OFKIT_D;
GRANT ALL ON RATING TO OFKIT_D_A;
GRANT ALL ON RATING TO OFKIT_L;
GRANT ALL ON RATING TO OFKIT_M;
GRANT ALL ON RATING TO OFKIT_N;
GRANT ALL ON RATING TO OFKIT_PK;
GRANT ALL ON RATING TO OFKIT_Z;
GRANT ALL ON RATING TO OK;
GRANT ALL ON RATING TO OK1;
GRANT ALL ON RATING TO OK2;
GRANT ALL ON RATING TO OKSANA;
GRANT ALL ON RATING TO OK_ST;
GRANT ALL ON RATING TO OK_STUD;
GRANT ALL ON RATING TO OK_STUD_1;
GRANT ALL ON RATING TO OK_STUD_2;
GRANT ALL ON RATING TO OK_STUD_N;
GRANT ALL ON RATING TO OK_STUD_SL;
GRANT ALL ON RATING TO OK_STUD_US;
GRANT ALL ON RATING TO PK;
GRANT ALL ON RATING TO PK_IT;
GRANT ALL ON RATING TO PK_IT1;
GRANT ALL ON RATING TO PK_IT2;
GRANT ALL ON RATING TO PK_IT3;
GRANT ALL ON RATING TO PK_IT4;
GRANT ALL ON RATING TO PK_IT5;
GRANT ALL ON RATING TO PK_MSTIG1;
GRANT ALL ON RATING TO PK_MSTIG2;
GRANT ALL ON RATING TO PK_MSTIG3;
GRANT ALL ON RATING TO PK_MSTIG4;
GRANT ALL ON RATING TO PK_MSTIGP1;
GRANT ALL ON RATING TO PK_MSTIGP2;
GRANT ALL ON RATING TO PK_MSTIG_1;
GRANT ALL ON RATING TO PK_MSTIG_2;
GRANT ALL ON RATING TO PK_MSTIG_3;
GRANT ALL ON RATING TO PK_MSTIG_4;
GRANT ALL ON RATING TO PK_MSTIG_P1;
GRANT ALL ON RATING TO PK_MSTIG_P2;
GRANT ALL ON RATING TO PK_MVS;
GRANT ALL ON RATING TO PK_MVS1;
GRANT ALL ON RATING TO PK_MVS2;
GRANT ALL ON RATING TO PK_MVS3;
GRANT ALL ON RATING TO PK_MVS4;
GRANT ALL ON RATING TO PK_MVS5;
GRANT ALL ON RATING TO PK_MVSP1;
GRANT ALL ON RATING TO PK_MVSP2;
GRANT ALL ON RATING TO PK_MVS_1;
GRANT ALL ON RATING TO PK_MVS_2;
GRANT ALL ON RATING TO PK_MVS_3;
GRANT ALL ON RATING TO PK_MVS_4;
GRANT ALL ON RATING TO PK_MVS_P1;
GRANT ALL ON RATING TO PK_MVS_P2;
GRANT ALL ON RATING TO PK_OFKIT;
GRANT ALL ON RATING TO PK_OFKIT1;
GRANT ALL ON RATING TO PK_OFKIT2;
GRANT ALL ON RATING TO PK_OFKIT3;
GRANT ALL ON RATING TO PK_OFKIT4;
GRANT ALL ON RATING TO PK_OFKIT5;
GRANT ALL ON RATING TO PK_OFKITP1;
GRANT ALL ON RATING TO PK_OFKITP2;
GRANT ALL ON RATING TO PK_OFK_1;
GRANT ALL ON RATING TO PK_OFK_2;
GRANT ALL ON RATING TO PK_OFK_3;
GRANT ALL ON RATING TO PK_OFK_4;
GRANT ALL ON RATING TO PK_OFK_P1;
GRANT ALL ON RATING TO PK_OFK_P2;
GRANT ALL ON RATING TO PK_OTV1;
GRANT ALL ON RATING TO PK_OTV2;
GRANT ALL ON RATING TO PK_OTV3;
GRANT ALL ON RATING TO PK_OTV4;
GRANT ALL ON RATING TO PK_SIIE;
GRANT ALL ON RATING TO PK_SIIE1;
GRANT ALL ON RATING TO PK_SIIE2;
GRANT ALL ON RATING TO PK_SIIE3;
GRANT ALL ON RATING TO PK_SIIE4;
GRANT ALL ON RATING TO PK_SIIE5;
GRANT ALL ON RATING TO PK_SIIEP1;
GRANT ALL ON RATING TO PK_SIIEP2;
GRANT ALL ON RATING TO PK_SIIE_1;
GRANT ALL ON RATING TO PK_SIIE_2;
GRANT ALL ON RATING TO PK_SIIE_3;
GRANT ALL ON RATING TO PK_SIIE_4;
GRANT ALL ON RATING TO PK_SIIE_P1;
GRANT ALL ON RATING TO PK_SIIE_P2;
GRANT ALL ON RATING TO PLANIDA_E;
GRANT SELECT ON RATING TO PRESS_01;
GRANT ALL ON RATING TO PRIEM1;
GRANT ALL ON RATING TO SADIK;
GRANT ALL ON RATING TO SEL_COM;
GRANT ALL ON RATING TO SERAFIMOVICH_Y;
GRANT ALL ON RATING TO SETUN1998;
GRANT ALL ON RATING TO SHMAENKOVA_M;
GRANT ALL ON RATING TO SHPAKEVICH_P;
GRANT ALL ON RATING TO SIIE1;
GRANT ALL ON RATING TO SIIE10;
GRANT ALL ON RATING TO SIIE12;
GRANT ALL ON RATING TO SIIE123;
GRANT ALL ON RATING TO SIIE1234;
GRANT ALL ON RATING TO SIIE2;
GRANT ALL ON RATING TO SIIE3;
GRANT ALL ON RATING TO SIIE4;
GRANT ALL ON RATING TO SIIE6;
GRANT ALL ON RATING TO SIIE_123;
GRANT ALL ON RATING TO SIIE_2;
GRANT ALL ON RATING TO SIIE_5;
GRANT ALL ON RATING TO SIIE_BELAYA_M;
GRANT ALL ON RATING TO SIIE_D;
GRANT ALL ON RATING TO SIIE_D2;
GRANT ALL ON RATING TO SIIE_LAB;
GRANT ALL ON RATING TO SIIE_LAB_D;
GRANT ALL ON RATING TO SIIE_LAB_Z;
GRANT ALL ON RATING TO SIIE_LAB_Z2;
GRANT ALL ON RATING TO SIIE_LAB_Z3;
GRANT ALL ON RATING TO SIIE_NEW;
GRANT ALL ON RATING TO SIIE_O;
GRANT ALL ON RATING TO SIIE_PK;
GRANT ALL ON RATING TO SIIE_Z;
GRANT ALL ON RATING TO SIIE_Z1;
GRANT ALL ON RATING TO SIIE_Z12;
GRANT ALL ON RATING TO SMOLENKOVA_T;
GRANT ALL ON RATING TO STUD_KADR1;
GRANT ALL ON RATING TO STUD_KADR2;
GRANT ALL ON RATING TO STUD_KADR3;
GRANT ALL ON RATING TO STUD_KADR4;
GRANT ALL ON RATING TO SVETA;
GRANT ALL ON RATING TO TEST_PREPOD;
GRANT ALL ON RATING TO TEST_PROBA;
GRANT ALL ON RATING TO TEST_STUD;
GRANT ALL ON RATING TO UHNOVEC;
GRANT ALL ON RATING TO UO_LAB;
GRANT ALL ON RATING TO UO_M;
GRANT ALL ON RATING TO UO_N;
GRANT ALL ON RATING TO UO_Z;
GRANT ALL ON RATING TO USER123;
GRANT ALL ON RATING TO USER622;
GRANT SELECT ON RATING TO VIEWER1;
GRANT ALL ON RATING TO VIEWER_MOB;
GRANT ALL ON RATING TO VNUK;
GRANT ALL ON RATING TO VOROBEI75;
GRANT ALL ON RATING TO YA;
GRANT ALL ON RATING TO YAUHENI_HATSURA;
GRANT ALL ON RATING TO ZHANNA_73;

/* Privileges of triggers */
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$RATING_AD;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$RATING_AD;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$RATING_AD;
GRANT UPDATE, REFERENCES ON RATING TO TRIGGER IBE$RATING_AD;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$RATING_AI;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$RATING_AI;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$RATING_AI;
GRANT UPDATE, REFERENCES ON RATING TO TRIGGER IBE$RATING_AI;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$RATING_AU;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$RATING_AU;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$RATING_AU;
GRANT UPDATE, REFERENCES ON RATING TO TRIGGER IBE$RATING_AU;