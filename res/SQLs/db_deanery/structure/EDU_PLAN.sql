/******************************************************************************/
/***               Generated by IBExpert 01.07.2022 14:22:35                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/


/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR IBE$LOG_TABLES_GEN;

CREATE TABLE EDU_PLAN (
    N_PLAN            INTEGER,
    N_OBJECT          SMALLINT,
    SEMESTR           SMALLINT,
    CLOCK_PLAN        DOUBLE PRECISION,
    YEAR_PLAN         SMALLINT,
    N_FAC             SMALLINT,
    ZACH_EXAM         SMALLINT,
    VID_EDU_PLAN      SMALLINT,
    SPECKURS          SMALLINT,
    STATUS_CONTROL    SMALLINT,
    CLOCK_PLAN_ALL    SMALLINT,
    TYPE_PLAN         SMALLINT,
    ALL_HOURS         SMALLINT,
    CLASSROOM_HOURS   SMALLINT,
    LECTURE_HOURS     SMALLINT,
    LABORATORY_HOURS  SMALLINT,
    PRACTICAL_HOURS   SMALLINT,
    SEMINAR_HOURS     SMALLINT
);




/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE EDU_PLAN ADD PRIMARY KEY (N_PLAN);


/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/

ALTER TABLE EDU_PLAN ADD FOREIGN KEY (N_OBJECT) REFERENCES OBJECT_PLAN (N_OBJECT);
ALTER TABLE EDU_PLAN ADD FOREIGN KEY (N_FAC) REFERENCES FACULTY (N_FAC);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX EDU_PLAN_EDU ON EDU_PLAN (VID_EDU_PLAN);
CREATE INDEX EDU_PLAN_EXAM ON EDU_PLAN (ZACH_EXAM);
CREATE INDEX EDU_PLAN_SEMESTR ON EDU_PLAN (SEMESTR);
CREATE INDEX EDU_PLAN_YEAR ON EDU_PLAN (YEAR_PLAN);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: EDU_PLAN_BI0 */
CREATE OR ALTER TRIGGER EDU_PLAN_BI0 FOR EDU_PLAN
INACTIVE BEFORE INSERT POSITION 0
AS
begin
  NEW.N_PLAN=GEN_ID(EDU_PLAN_N_PLAN,1);
end
^


/* Trigger: IBE$EDU_PLAN_AD */
CREATE OR ALTER TRIGGER IBE$EDU_PLAN_AD FOR EDU_PLAN
ACTIVE AFTER DELETE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'EDU_PLAN', 'D', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_PLAN', OLD.N_PLAN);
 
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_PLAN',OLD.N_PLAN, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_OBJECT',OLD.N_OBJECT, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'SEMESTR',OLD.SEMESTR, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'CLOCK_PLAN',OLD.CLOCK_PLAN, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'YEAR_PLAN',OLD.YEAR_PLAN, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_FAC',OLD.N_FAC, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'ZACH_EXAM',OLD.ZACH_EXAM, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'VID_EDU_PLAN',OLD.VID_EDU_PLAN, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'SPECKURS',OLD.SPECKURS, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'STATUS_CONTROL',OLD.STATUS_CONTROL, NULL);
 
  
END
^


/* Trigger: IBE$EDU_PLAN_AI */
CREATE OR ALTER TRIGGER IBE$EDU_PLAN_AI FOR EDU_PLAN
ACTIVE AFTER INSERT POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'EDU_PLAN', 'I', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_PLAN', NEW.N_PLAN);
 
  IF (NOT (NEW.N_PLAN IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_PLAN', NULL, NEW.N_PLAN);
  
  IF (NOT (NEW.N_OBJECT IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_OBJECT', NULL, NEW.N_OBJECT);
  
  IF (NOT (NEW.SEMESTR IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'SEMESTR', NULL, NEW.SEMESTR);
  
  IF (NOT (NEW.CLOCK_PLAN IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'CLOCK_PLAN', NULL, NEW.CLOCK_PLAN);
  
  IF (NOT (NEW.YEAR_PLAN IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'YEAR_PLAN', NULL, NEW.YEAR_PLAN);
  
  IF (NOT (NEW.N_FAC IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_FAC', NULL, NEW.N_FAC);
  
  IF (NOT (NEW.ZACH_EXAM IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'ZACH_EXAM', NULL, NEW.ZACH_EXAM);
  
  IF (NOT (NEW.VID_EDU_PLAN IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'VID_EDU_PLAN', NULL, NEW.VID_EDU_PLAN);
  
  IF (NOT (NEW.SPECKURS IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'SPECKURS', NULL, NEW.SPECKURS);
  
  IF (NOT (NEW.STATUS_CONTROL IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'STATUS_CONTROL', NULL, NEW.STATUS_CONTROL);
 
  
END
^


/* Trigger: IBE$EDU_PLAN_AU */
CREATE OR ALTER TRIGGER IBE$EDU_PLAN_AU FOR EDU_PLAN
ACTIVE AFTER UPDATE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'EDU_PLAN', 'U', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_PLAN', OLD.N_PLAN);
 
  IF ((OLD.N_PLAN IS NULL AND NEW.N_PLAN IS NOT NULL) OR
      (NEW.N_PLAN IS NULL AND OLD.N_PLAN IS NOT NULL) OR
      (NEW.N_PLAN IS NOT NULL AND OLD.N_PLAN IS NOT NULL AND NEW.N_PLAN <> OLD.N_PLAN)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_PLAN',OLD.N_PLAN, NEW.N_PLAN);
  
  IF ((OLD.N_OBJECT IS NULL AND NEW.N_OBJECT IS NOT NULL) OR
      (NEW.N_OBJECT IS NULL AND OLD.N_OBJECT IS NOT NULL) OR
      (NEW.N_OBJECT IS NOT NULL AND OLD.N_OBJECT IS NOT NULL AND NEW.N_OBJECT <> OLD.N_OBJECT)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_OBJECT',OLD.N_OBJECT, NEW.N_OBJECT);
  
  IF ((OLD.SEMESTR IS NULL AND NEW.SEMESTR IS NOT NULL) OR
      (NEW.SEMESTR IS NULL AND OLD.SEMESTR IS NOT NULL) OR
      (NEW.SEMESTR IS NOT NULL AND OLD.SEMESTR IS NOT NULL AND NEW.SEMESTR <> OLD.SEMESTR)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'SEMESTR',OLD.SEMESTR, NEW.SEMESTR);
  
  IF ((OLD.CLOCK_PLAN IS NULL AND NEW.CLOCK_PLAN IS NOT NULL) OR
      (NEW.CLOCK_PLAN IS NULL AND OLD.CLOCK_PLAN IS NOT NULL) OR
      (NEW.CLOCK_PLAN IS NOT NULL AND OLD.CLOCK_PLAN IS NOT NULL AND NEW.CLOCK_PLAN <> OLD.CLOCK_PLAN)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'CLOCK_PLAN',OLD.CLOCK_PLAN, NEW.CLOCK_PLAN);
  
  IF ((OLD.YEAR_PLAN IS NULL AND NEW.YEAR_PLAN IS NOT NULL) OR
      (NEW.YEAR_PLAN IS NULL AND OLD.YEAR_PLAN IS NOT NULL) OR
      (NEW.YEAR_PLAN IS NOT NULL AND OLD.YEAR_PLAN IS NOT NULL AND NEW.YEAR_PLAN <> OLD.YEAR_PLAN)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'YEAR_PLAN',OLD.YEAR_PLAN, NEW.YEAR_PLAN);
  
  IF ((OLD.N_FAC IS NULL AND NEW.N_FAC IS NOT NULL) OR
      (NEW.N_FAC IS NULL AND OLD.N_FAC IS NOT NULL) OR
      (NEW.N_FAC IS NOT NULL AND OLD.N_FAC IS NOT NULL AND NEW.N_FAC <> OLD.N_FAC)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_FAC',OLD.N_FAC, NEW.N_FAC);
  
  IF ((OLD.ZACH_EXAM IS NULL AND NEW.ZACH_EXAM IS NOT NULL) OR
      (NEW.ZACH_EXAM IS NULL AND OLD.ZACH_EXAM IS NOT NULL) OR
      (NEW.ZACH_EXAM IS NOT NULL AND OLD.ZACH_EXAM IS NOT NULL AND NEW.ZACH_EXAM <> OLD.ZACH_EXAM)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'ZACH_EXAM',OLD.ZACH_EXAM, NEW.ZACH_EXAM);
  
  IF ((OLD.VID_EDU_PLAN IS NULL AND NEW.VID_EDU_PLAN IS NOT NULL) OR
      (NEW.VID_EDU_PLAN IS NULL AND OLD.VID_EDU_PLAN IS NOT NULL) OR
      (NEW.VID_EDU_PLAN IS NOT NULL AND OLD.VID_EDU_PLAN IS NOT NULL AND NEW.VID_EDU_PLAN <> OLD.VID_EDU_PLAN)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'VID_EDU_PLAN',OLD.VID_EDU_PLAN, NEW.VID_EDU_PLAN);
  
  IF ((OLD.SPECKURS IS NULL AND NEW.SPECKURS IS NOT NULL) OR
      (NEW.SPECKURS IS NULL AND OLD.SPECKURS IS NOT NULL) OR
      (NEW.SPECKURS IS NOT NULL AND OLD.SPECKURS IS NOT NULL AND NEW.SPECKURS <> OLD.SPECKURS)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'SPECKURS',OLD.SPECKURS, NEW.SPECKURS);
  
  IF ((OLD.STATUS_CONTROL IS NULL AND NEW.STATUS_CONTROL IS NOT NULL) OR
      (NEW.STATUS_CONTROL IS NULL AND OLD.STATUS_CONTROL IS NOT NULL) OR
      (NEW.STATUS_CONTROL IS NOT NULL AND OLD.STATUS_CONTROL IS NOT NULL AND NEW.STATUS_CONTROL <> OLD.STATUS_CONTROL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'STATUS_CONTROL',OLD.STATUS_CONTROL, NEW.STATUS_CONTROL);
 
  
END
^

SET TERM ; ^



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

COMMENT ON COLUMN EDU_PLAN.ZACH_EXAM IS 
'0 - Без вида контроля
1 - Зачет
2 - Экзамен
3 - Диф.зачет
4 - ГОС экзамен
5 - Дипломная работа';

COMMENT ON COLUMN EDU_PLAN.SPECKURS IS 
'0-базовый предмет
1-спецкурс
2-курсовая работа
3-практика
4-факультатив
5-гос';

COMMENT ON COLUMN EDU_PLAN.STATUS_CONTROL IS 
'Последний вид контроля -1';

COMMENT ON COLUMN EDU_PLAN.CLOCK_PLAN_ALL IS 
'Всего часов по учебному плану';

COMMENT ON COLUMN EDU_PLAN.TYPE_PLAN IS 
'0 - обычный предмет
1 - интегрированный модуль
2 - предмет входящий в интегрированный модуль
';



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON EDU_PLAN TO ABITUR1;
GRANT ALL ON EDU_PLAN TO ABITUR2;
GRANT ALL ON EDU_PLAN TO ABITUR3;
GRANT ALL ON EDU_PLAN TO ABITUR4;
GRANT ALL ON EDU_PLAN TO ALENA_2109;
GRANT ALL ON EDU_PLAN TO ALEXANDER_GONCHAROV;
GRANT ALL ON EDU_PLAN TO ALINA_E;
GRANT ALL ON EDU_PLAN TO ANNA;
GRANT ALL ON EDU_PLAN TO ASPA;
GRANT ALL ON EDU_PLAN TO ASPIRANTURA;
GRANT ALL ON EDU_PLAN TO ASU;
GRANT ALL ON EDU_PLAN TO ASU1;
GRANT ALL ON EDU_PLAN TO ASU2;
GRANT ALL ON EDU_PLAN TO ASU3;
GRANT ALL ON EDU_PLAN TO ASU4;
GRANT ALL ON EDU_PLAN TO BAKS16;
GRANT ALL ON EDU_PLAN TO BAKS68878;
GRANT ALL ON EDU_PLAN TO BOBROVICH_O;
GRANT ALL ON EDU_PLAN TO DEVELOPER;
GRANT ALL ON EDU_PLAN TO DEVELOPER2;
GRANT ALL ON EDU_PLAN TO DOBROVOLSKAYA;
GRANT ALL ON EDU_PLAN TO DVORETSKAYA_K;
GRANT ALL ON EDU_PLAN TO FACULTY1;
GRANT ALL ON EDU_PLAN TO GONCHAROV434_2;
GRANT ALL ON EDU_PLAN TO GUNICH_O;
GRANT ALL ON EDU_PLAN TO GUNICH_OKSANA;
GRANT ALL ON EDU_PLAN TO HOSTEL_PK1;
GRANT ALL ON EDU_PLAN TO HOSTEL_PK2;
GRANT ALL ON EDU_PLAN TO IMSIT_Z;
GRANT SELECT ON EDU_PLAN TO INTER_01;
GRANT SELECT ON EDU_PLAN TO INTER_02;
GRANT ALL ON EDU_PLAN TO IP_PROJECT;
GRANT ALL ON EDU_PLAN TO IRONSKULL;
GRANT ALL ON EDU_PLAN TO IT;
GRANT ALL ON EDU_PLAN TO IT2;
GRANT ALL ON EDU_PLAN TO IT5;
GRANT ALL ON EDU_PLAN TO IT6;
GRANT ALL ON EDU_PLAN TO IT7;
GRANT ALL ON EDU_PLAN TO IT8;
GRANT ALL ON EDU_PLAN TO IT_1;
GRANT ALL ON EDU_PLAN TO IT_2;
GRANT ALL ON EDU_PLAN TO IT_3;
GRANT ALL ON EDU_PLAN TO IT_8;
GRANT ALL ON EDU_PLAN TO IT_D;
GRANT ALL ON EDU_PLAN TO IT_L;
GRANT ALL ON EDU_PLAN TO IT_M;
GRANT ALL ON EDU_PLAN TO IT_PK;
GRANT ALL ON EDU_PLAN TO IT_Z;
GRANT ALL ON EDU_PLAN TO IVANOVA_A;
GRANT ALL ON EDU_PLAN TO JKMUF2507;
GRANT ALL ON EDU_PLAN TO KANDRUKEVICH_M;
GRANT ALL ON EDU_PLAN TO KAND_M;
GRANT ALL ON EDU_PLAN TO KOSIK_N;
GRANT ALL ON EDU_PLAN TO KRISTINA;
GRANT ALL ON EDU_PLAN TO LAVRENOVA_V;
GRANT ALL ON EDU_PLAN TO LENAUSOVA;
GRANT ALL ON EDU_PLAN TO LIASHKOVICH_I;
GRANT ALL ON EDU_PLAN TO LTRFYFN2019;
GRANT ALL ON EDU_PLAN TO MAGISTR;
GRANT ALL ON EDU_PLAN TO MARINA;
GRANT ALL ON EDU_PLAN TO MATUSEVICH;
GRANT ALL ON EDU_PLAN TO MATUSEVICH_M;
GRANT ALL ON EDU_PLAN TO MIMI;
GRANT ALL ON EDU_PLAN TO MVS;
GRANT ALL ON EDU_PLAN TO MVS_1;
GRANT ALL ON EDU_PLAN TO MVS_D;
GRANT ALL ON EDU_PLAN TO MVS_D_L;
GRANT ALL ON EDU_PLAN TO MVS_ETB;
GRANT ALL ON EDU_PLAN TO MVS_G;
GRANT ALL ON EDU_PLAN TO MVS_L;
GRANT ALL ON EDU_PLAN TO MVS_LP;
GRANT ALL ON EDU_PLAN TO MVS_N;
GRANT ALL ON EDU_PLAN TO MVS_PK;
GRANT ALL ON EDU_PLAN TO MVS_V;
GRANT ALL ON EDU_PLAN TO MVS_Z;
GRANT ALL ON EDU_PLAN TO MVS_ZAM;
GRANT ALL ON EDU_PLAN TO MVS_Z_L;
GRANT ALL ON EDU_PLAN TO M_2;
GRANT ALL ON EDU_PLAN TO NEW78;
GRANT ALL ON EDU_PLAN TO NEWLOGIN;
GRANT ALL ON EDU_PLAN TO NEWUSER;
GRANT ALL ON EDU_PLAN TO NOVIK_A;
GRANT ALL ON EDU_PLAN TO OFKIT15;
GRANT ALL ON EDU_PLAN TO OFKITA;
GRANT ALL ON EDU_PLAN TO OFKIT_1;
GRANT ALL ON EDU_PLAN TO OFKIT_15;
GRANT ALL ON EDU_PLAN TO OFKIT_A;
GRANT ALL ON EDU_PLAN TO OFKIT_D;
GRANT ALL ON EDU_PLAN TO OFKIT_D_A;
GRANT ALL ON EDU_PLAN TO OFKIT_L;
GRANT ALL ON EDU_PLAN TO OFKIT_LAB;
GRANT ALL ON EDU_PLAN TO OFKIT_M;
GRANT ALL ON EDU_PLAN TO OFKIT_N;
GRANT ALL ON EDU_PLAN TO OFKIT_PK;
GRANT ALL ON EDU_PLAN TO OFKIT_Z;
GRANT ALL ON EDU_PLAN TO OK;
GRANT ALL ON EDU_PLAN TO OK1;
GRANT ALL ON EDU_PLAN TO OK2;
GRANT ALL ON EDU_PLAN TO OKSANA;
GRANT ALL ON EDU_PLAN TO OK_ST;
GRANT ALL ON EDU_PLAN TO OK_STUD;
GRANT ALL ON EDU_PLAN TO OK_STUD_1;
GRANT ALL ON EDU_PLAN TO OK_STUD_2;
GRANT ALL ON EDU_PLAN TO OK_STUD_N;
GRANT ALL ON EDU_PLAN TO OK_STUD_SL;
GRANT ALL ON EDU_PLAN TO OK_STUD_US;
GRANT ALL ON EDU_PLAN TO PK;
GRANT ALL ON EDU_PLAN TO PK_IT;
GRANT ALL ON EDU_PLAN TO PK_IT1;
GRANT ALL ON EDU_PLAN TO PK_IT2;
GRANT ALL ON EDU_PLAN TO PK_IT3;
GRANT ALL ON EDU_PLAN TO PK_IT4;
GRANT ALL ON EDU_PLAN TO PK_IT5;
GRANT ALL ON EDU_PLAN TO PK_MSTIG1;
GRANT ALL ON EDU_PLAN TO PK_MSTIG2;
GRANT ALL ON EDU_PLAN TO PK_MSTIG3;
GRANT ALL ON EDU_PLAN TO PK_MSTIG4;
GRANT ALL ON EDU_PLAN TO PK_MSTIGP1;
GRANT ALL ON EDU_PLAN TO PK_MSTIGP2;
GRANT ALL ON EDU_PLAN TO PK_MSTIG_1;
GRANT ALL ON EDU_PLAN TO PK_MSTIG_2;
GRANT ALL ON EDU_PLAN TO PK_MSTIG_3;
GRANT ALL ON EDU_PLAN TO PK_MSTIG_4;
GRANT ALL ON EDU_PLAN TO PK_MSTIG_P1;
GRANT ALL ON EDU_PLAN TO PK_MSTIG_P2;
GRANT ALL ON EDU_PLAN TO PK_MVS;
GRANT ALL ON EDU_PLAN TO PK_MVS1;
GRANT ALL ON EDU_PLAN TO PK_MVS2;
GRANT ALL ON EDU_PLAN TO PK_MVS3;
GRANT ALL ON EDU_PLAN TO PK_MVS4;
GRANT ALL ON EDU_PLAN TO PK_MVS5;
GRANT ALL ON EDU_PLAN TO PK_MVSP1;
GRANT ALL ON EDU_PLAN TO PK_MVSP2;
GRANT ALL ON EDU_PLAN TO PK_MVS_1;
GRANT ALL ON EDU_PLAN TO PK_MVS_2;
GRANT ALL ON EDU_PLAN TO PK_MVS_3;
GRANT ALL ON EDU_PLAN TO PK_MVS_4;
GRANT ALL ON EDU_PLAN TO PK_MVS_P1;
GRANT ALL ON EDU_PLAN TO PK_MVS_P2;
GRANT ALL ON EDU_PLAN TO PK_OFKIT;
GRANT ALL ON EDU_PLAN TO PK_OFKIT1;
GRANT ALL ON EDU_PLAN TO PK_OFKIT2;
GRANT ALL ON EDU_PLAN TO PK_OFKIT3;
GRANT ALL ON EDU_PLAN TO PK_OFKIT4;
GRANT ALL ON EDU_PLAN TO PK_OFKIT5;
GRANT ALL ON EDU_PLAN TO PK_OFKITP1;
GRANT ALL ON EDU_PLAN TO PK_OFKITP2;
GRANT ALL ON EDU_PLAN TO PK_OFK_1;
GRANT ALL ON EDU_PLAN TO PK_OFK_2;
GRANT ALL ON EDU_PLAN TO PK_OFK_3;
GRANT ALL ON EDU_PLAN TO PK_OFK_4;
GRANT ALL ON EDU_PLAN TO PK_OFK_P1;
GRANT ALL ON EDU_PLAN TO PK_OFK_P2;
GRANT ALL ON EDU_PLAN TO PK_OTV1;
GRANT ALL ON EDU_PLAN TO PK_OTV2;
GRANT ALL ON EDU_PLAN TO PK_OTV3;
GRANT ALL ON EDU_PLAN TO PK_OTV4;
GRANT ALL ON EDU_PLAN TO PK_SIIE;
GRANT ALL ON EDU_PLAN TO PK_SIIE1;
GRANT ALL ON EDU_PLAN TO PK_SIIE2;
GRANT ALL ON EDU_PLAN TO PK_SIIE3;
GRANT ALL ON EDU_PLAN TO PK_SIIE4;
GRANT ALL ON EDU_PLAN TO PK_SIIE5;
GRANT ALL ON EDU_PLAN TO PK_SIIEP1;
GRANT ALL ON EDU_PLAN TO PK_SIIEP2;
GRANT ALL ON EDU_PLAN TO PK_SIIE_1;
GRANT ALL ON EDU_PLAN TO PK_SIIE_2;
GRANT ALL ON EDU_PLAN TO PK_SIIE_3;
GRANT ALL ON EDU_PLAN TO PK_SIIE_4;
GRANT ALL ON EDU_PLAN TO PK_SIIE_P1;
GRANT ALL ON EDU_PLAN TO PK_SIIE_P2;
GRANT ALL ON EDU_PLAN TO PLANIDA_E;
GRANT SELECT ON EDU_PLAN TO PRESS_01;
GRANT ALL ON EDU_PLAN TO PRIEM1;
GRANT ALL ON EDU_PLAN TO SADIK;
GRANT ALL ON EDU_PLAN TO SEL_COM;
GRANT ALL ON EDU_PLAN TO SERAFIMOVICH_Y;
GRANT ALL ON EDU_PLAN TO SETUN1998;
GRANT ALL ON EDU_PLAN TO SHMAENKOVA_M;
GRANT ALL ON EDU_PLAN TO SHPAKEVICH_P;
GRANT ALL ON EDU_PLAN TO SIIE1;
GRANT ALL ON EDU_PLAN TO SIIE10;
GRANT ALL ON EDU_PLAN TO SIIE12;
GRANT ALL ON EDU_PLAN TO SIIE123;
GRANT ALL ON EDU_PLAN TO SIIE1234;
GRANT ALL ON EDU_PLAN TO SIIE2;
GRANT ALL ON EDU_PLAN TO SIIE3;
GRANT ALL ON EDU_PLAN TO SIIE4;
GRANT ALL ON EDU_PLAN TO SIIE6;
GRANT ALL ON EDU_PLAN TO SIIE_123;
GRANT ALL ON EDU_PLAN TO SIIE_2;
GRANT ALL ON EDU_PLAN TO SIIE_5;
GRANT ALL ON EDU_PLAN TO SIIE_BELAYA_M;
GRANT ALL ON EDU_PLAN TO SIIE_D;
GRANT ALL ON EDU_PLAN TO SIIE_D2;
GRANT ALL ON EDU_PLAN TO SIIE_LAB;
GRANT ALL ON EDU_PLAN TO SIIE_LAB_D;
GRANT ALL ON EDU_PLAN TO SIIE_LAB_Z;
GRANT ALL ON EDU_PLAN TO SIIE_LAB_Z2;
GRANT ALL ON EDU_PLAN TO SIIE_LAB_Z3;
GRANT ALL ON EDU_PLAN TO SIIE_NEW;
GRANT ALL ON EDU_PLAN TO SIIE_O;
GRANT ALL ON EDU_PLAN TO SIIE_PK;
GRANT ALL ON EDU_PLAN TO SIIE_Z;
GRANT ALL ON EDU_PLAN TO SIIE_Z1;
GRANT ALL ON EDU_PLAN TO SIIE_Z12;
GRANT ALL ON EDU_PLAN TO SMOLENKOVA_T;
GRANT ALL ON EDU_PLAN TO STUD_KADR1;
GRANT ALL ON EDU_PLAN TO STUD_KADR2;
GRANT ALL ON EDU_PLAN TO STUD_KADR3;
GRANT ALL ON EDU_PLAN TO STUD_KADR4;
GRANT ALL ON EDU_PLAN TO SVETA;
GRANT ALL ON EDU_PLAN TO TEST_PREPOD;
GRANT ALL ON EDU_PLAN TO TEST_PROBA;
GRANT ALL ON EDU_PLAN TO TEST_STUD;
GRANT ALL ON EDU_PLAN TO UHNOVEC;
GRANT ALL ON EDU_PLAN TO UO_LAB;
GRANT ALL ON EDU_PLAN TO UO_M;
GRANT ALL ON EDU_PLAN TO UO_N;
GRANT ALL ON EDU_PLAN TO UO_Z;
GRANT ALL ON EDU_PLAN TO USER123;
GRANT ALL ON EDU_PLAN TO USER622;
GRANT SELECT ON EDU_PLAN TO VIEWER1;
GRANT ALL ON EDU_PLAN TO VIEWER_MOB;
GRANT ALL ON EDU_PLAN TO VNUK;
GRANT ALL ON EDU_PLAN TO VOROBEI75;
GRANT ALL ON EDU_PLAN TO YA;
GRANT ALL ON EDU_PLAN TO YAUHENI_HATSURA;
GRANT ALL ON EDU_PLAN TO ZHANNA_73;

/* Privileges of triggers */
GRANT UPDATE, REFERENCES ON EDU_PLAN TO TRIGGER IBE$EDU_PLAN_AD;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$EDU_PLAN_AD;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$EDU_PLAN_AD;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$EDU_PLAN_AD;
GRANT UPDATE, REFERENCES ON EDU_PLAN TO TRIGGER IBE$EDU_PLAN_AI;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$EDU_PLAN_AI;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$EDU_PLAN_AI;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$EDU_PLAN_AI;
GRANT UPDATE, REFERENCES ON EDU_PLAN TO TRIGGER IBE$EDU_PLAN_AU;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$EDU_PLAN_AU;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$EDU_PLAN_AU;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$EDU_PLAN_AU;