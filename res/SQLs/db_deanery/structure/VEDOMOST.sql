/******************************************************************************/
/***               Generated by IBExpert 01.07.2022 15:53:30                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/


/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR IBE$LOG_TABLES_GEN;

CREATE TABLE VEDOMOST (
    N_VED        INTEGER,
    N_VEDOMOST   SMALLINT,
    D_VED        DATE,
    SEMESTR_VED  SMALLINT,
    FIO_EXAM     VARCHAR(40) COLLATE PXW_CYRL,
    STATUS       SMALLINT,
    N_PLAN       INTEGER,
    N_FAC        SMALLINT,
    END_D_EXAM   DATE,
    FIO2         VARCHAR(40) COLLATE PXW_CYRL,
    FIO3         VARCHAR(40) COLLATE PXW_CYRL,
    INC_GROUP    SMALLINT,
    N_SPECIALIZ  SMALLINT,
    INVALID      SMALLINT DEFAULT 0
);




/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE VEDOMOST ADD PRIMARY KEY (N_VED);


/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/

ALTER TABLE VEDOMOST ADD FOREIGN KEY (N_PLAN) REFERENCES EDU_PLAN (N_PLAN);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX I_VEDOMOST_D_VED ON VEDOMOST (D_VED);
CREATE INDEX I_VEDOMOST_FAC ON VEDOMOST (N_FAC);
CREATE INDEX I_VEDOMOST_GROUP ON VEDOMOST (INC_GROUP);
CREATE INDEX I_VEDOMOST_N_VEDOMOST ON VEDOMOST (N_VEDOMOST);
CREATE INDEX I_VEDOMOST_PLAN ON VEDOMOST (N_PLAN);
CREATE INDEX I_VEDOMOST_SEMESTR ON VEDOMOST (SEMESTR_VED);
CREATE INDEX I_VEDOMOST_SPECIALIZ ON VEDOMOST (N_SPECIALIZ);
CREATE INDEX I_VEDOMOST_STATUS ON VEDOMOST (STATUS);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: IBE$VEDOMOST_AD */
CREATE OR ALTER TRIGGER IBE$VEDOMOST_AD FOR VEDOMOST
ACTIVE AFTER DELETE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'VEDOMOST', 'D', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_VED', OLD.N_VED);
 
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_VED',OLD.N_VED, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_VEDOMOST',OLD.N_VEDOMOST, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'D_VED',OLD.D_VED, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'SEMESTR_VED',OLD.SEMESTR_VED, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'FIO_EXAM',OLD.FIO_EXAM, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'STATUS',OLD.STATUS, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_PLAN',OLD.N_PLAN, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_FAC',OLD.N_FAC, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'END_D_EXAM',OLD.END_D_EXAM, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'FIO2',OLD.FIO2, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'FIO3',OLD.FIO3, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'INC_GROUP',OLD.INC_GROUP, NULL);
  
  INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
         VALUES (:TID,'N_SPECIALIZ',OLD.N_SPECIALIZ, NULL);
 
  
END
^


/* Trigger: IBE$VEDOMOST_AI */
CREATE OR ALTER TRIGGER IBE$VEDOMOST_AI FOR VEDOMOST
ACTIVE AFTER INSERT POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'VEDOMOST', 'I', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_VED', NEW.N_VED);
 
  IF (NOT (NEW.N_VED IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_VED', NULL, NEW.N_VED);
  
  IF (NOT (NEW.N_VEDOMOST IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_VEDOMOST', NULL, NEW.N_VEDOMOST);
  
  IF (NOT (NEW.D_VED IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'D_VED', NULL, NEW.D_VED);
  
  IF (NOT (NEW.SEMESTR_VED IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'SEMESTR_VED', NULL, NEW.SEMESTR_VED);
  
  IF (NOT (NEW.FIO_EXAM IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'FIO_EXAM', NULL, NEW.FIO_EXAM);
  
  IF (NOT (NEW.STATUS IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'STATUS', NULL, NEW.STATUS);
  
  IF (NOT (NEW.N_PLAN IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_PLAN', NULL, NEW.N_PLAN);
  
  IF (NOT (NEW.N_FAC IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_FAC', NULL, NEW.N_FAC);
  
  IF (NOT (NEW.END_D_EXAM IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'END_D_EXAM', NULL, NEW.END_D_EXAM);
  
  IF (NOT (NEW.FIO2 IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'FIO2', NULL, NEW.FIO2);
  
  IF (NOT (NEW.FIO3 IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'FIO3', NULL, NEW.FIO3);
  
  IF (NOT (NEW.INC_GROUP IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'INC_GROUP', NULL, NEW.INC_GROUP);
  
  IF (NOT (NEW.N_SPECIALIZ IS NULL)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID, 'N_SPECIALIZ', NULL, NEW.N_SPECIALIZ);
 
  
END
^


/* Trigger: IBE$VEDOMOST_AU */
CREATE OR ALTER TRIGGER IBE$VEDOMOST_AU FOR VEDOMOST
ACTIVE AFTER UPDATE POSITION 32767
AS
DECLARE VARIABLE TID INTEGER;
BEGIN
  TID = GEN_ID(IBE$LOG_TABLES_GEN,1);
 
  INSERT INTO IBE$LOG_TABLES (ID, TABLE_NAME, OPERATION, DATE_TIME, USER_NAME)
    VALUES (:TID, 'VEDOMOST', 'U', 'NOW', USER);
 
  INSERT INTO IBE$LOG_KEYS (LOG_TABLES_ID, KEY_FIELD, KEY_VALUE)
    VALUES (:TID, 'N_VED', OLD.N_VED);
 
  IF ((OLD.N_VED IS NULL AND NEW.N_VED IS NOT NULL) OR
      (NEW.N_VED IS NULL AND OLD.N_VED IS NOT NULL) OR
      (NEW.N_VED IS NOT NULL AND OLD.N_VED IS NOT NULL AND NEW.N_VED <> OLD.N_VED)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_VED',OLD.N_VED, NEW.N_VED);
  
  IF ((OLD.N_VEDOMOST IS NULL AND NEW.N_VEDOMOST IS NOT NULL) OR
      (NEW.N_VEDOMOST IS NULL AND OLD.N_VEDOMOST IS NOT NULL) OR
      (NEW.N_VEDOMOST IS NOT NULL AND OLD.N_VEDOMOST IS NOT NULL AND NEW.N_VEDOMOST <> OLD.N_VEDOMOST)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_VEDOMOST',OLD.N_VEDOMOST, NEW.N_VEDOMOST);
  
  IF ((OLD.D_VED IS NULL AND NEW.D_VED IS NOT NULL) OR
      (NEW.D_VED IS NULL AND OLD.D_VED IS NOT NULL) OR
      (NEW.D_VED IS NOT NULL AND OLD.D_VED IS NOT NULL AND NEW.D_VED <> OLD.D_VED)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'D_VED',OLD.D_VED, NEW.D_VED);
  
  IF ((OLD.SEMESTR_VED IS NULL AND NEW.SEMESTR_VED IS NOT NULL) OR
      (NEW.SEMESTR_VED IS NULL AND OLD.SEMESTR_VED IS NOT NULL) OR
      (NEW.SEMESTR_VED IS NOT NULL AND OLD.SEMESTR_VED IS NOT NULL AND NEW.SEMESTR_VED <> OLD.SEMESTR_VED)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'SEMESTR_VED',OLD.SEMESTR_VED, NEW.SEMESTR_VED);
  
  IF ((OLD.FIO_EXAM IS NULL AND NEW.FIO_EXAM IS NOT NULL) OR
      (NEW.FIO_EXAM IS NULL AND OLD.FIO_EXAM IS NOT NULL) OR
      (NEW.FIO_EXAM IS NOT NULL AND OLD.FIO_EXAM IS NOT NULL AND NEW.FIO_EXAM <> OLD.FIO_EXAM)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'FIO_EXAM',OLD.FIO_EXAM, NEW.FIO_EXAM);
  
  IF ((OLD.STATUS IS NULL AND NEW.STATUS IS NOT NULL) OR
      (NEW.STATUS IS NULL AND OLD.STATUS IS NOT NULL) OR
      (NEW.STATUS IS NOT NULL AND OLD.STATUS IS NOT NULL AND NEW.STATUS <> OLD.STATUS)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'STATUS',OLD.STATUS, NEW.STATUS);
  
  IF ((OLD.N_PLAN IS NULL AND NEW.N_PLAN IS NOT NULL) OR
      (NEW.N_PLAN IS NULL AND OLD.N_PLAN IS NOT NULL) OR
      (NEW.N_PLAN IS NOT NULL AND OLD.N_PLAN IS NOT NULL AND NEW.N_PLAN <> OLD.N_PLAN)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_PLAN',OLD.N_PLAN, NEW.N_PLAN);
  
  IF ((OLD.N_FAC IS NULL AND NEW.N_FAC IS NOT NULL) OR
      (NEW.N_FAC IS NULL AND OLD.N_FAC IS NOT NULL) OR
      (NEW.N_FAC IS NOT NULL AND OLD.N_FAC IS NOT NULL AND NEW.N_FAC <> OLD.N_FAC)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_FAC',OLD.N_FAC, NEW.N_FAC);
  
  IF ((OLD.END_D_EXAM IS NULL AND NEW.END_D_EXAM IS NOT NULL) OR
      (NEW.END_D_EXAM IS NULL AND OLD.END_D_EXAM IS NOT NULL) OR
      (NEW.END_D_EXAM IS NOT NULL AND OLD.END_D_EXAM IS NOT NULL AND NEW.END_D_EXAM <> OLD.END_D_EXAM)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'END_D_EXAM',OLD.END_D_EXAM, NEW.END_D_EXAM);
  
  IF ((OLD.FIO2 IS NULL AND NEW.FIO2 IS NOT NULL) OR
      (NEW.FIO2 IS NULL AND OLD.FIO2 IS NOT NULL) OR
      (NEW.FIO2 IS NOT NULL AND OLD.FIO2 IS NOT NULL AND NEW.FIO2 <> OLD.FIO2)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'FIO2',OLD.FIO2, NEW.FIO2);
  
  IF ((OLD.FIO3 IS NULL AND NEW.FIO3 IS NOT NULL) OR
      (NEW.FIO3 IS NULL AND OLD.FIO3 IS NOT NULL) OR
      (NEW.FIO3 IS NOT NULL AND OLD.FIO3 IS NOT NULL AND NEW.FIO3 <> OLD.FIO3)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'FIO3',OLD.FIO3, NEW.FIO3);
  
  IF ((OLD.INC_GROUP IS NULL AND NEW.INC_GROUP IS NOT NULL) OR
      (NEW.INC_GROUP IS NULL AND OLD.INC_GROUP IS NOT NULL) OR
      (NEW.INC_GROUP IS NOT NULL AND OLD.INC_GROUP IS NOT NULL AND NEW.INC_GROUP <> OLD.INC_GROUP)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'INC_GROUP',OLD.INC_GROUP, NEW.INC_GROUP);
  
  IF ((OLD.N_SPECIALIZ IS NULL AND NEW.N_SPECIALIZ IS NOT NULL) OR
      (NEW.N_SPECIALIZ IS NULL AND OLD.N_SPECIALIZ IS NOT NULL) OR
      (NEW.N_SPECIALIZ IS NOT NULL AND OLD.N_SPECIALIZ IS NOT NULL AND NEW.N_SPECIALIZ <> OLD.N_SPECIALIZ)) THEN
    INSERT INTO IBE$LOG_FIELDS (LOG_TABLES_ID, FIELD_NAME, OLD_VALUE, NEW_VALUE)
           VALUES (:TID,'N_SPECIALIZ',OLD.N_SPECIALIZ, NEW.N_SPECIALIZ);
 
  
END
^


/* Trigger: VEDOMOST_BI */
CREATE OR ALTER TRIGGER VEDOMOST_BI FOR VEDOMOST
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.invalid is null) then
    new.invalid = 0;
end
^


/* Trigger: VED_DEL */
CREATE OR ALTER TRIGGER VED_DEL FOR VEDOMOST
ACTIVE BEFORE DELETE POSITION 0
AS
BEGIN
execute procedure vedomost_del (OLD.n_ved);
END
^

SET TERM ; ^



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

COMMENT ON COLUMN VEDOMOST.STATUS IS 
'0-основная
1-экз.лист
2-дополнительная
3-досрочная
4-ликвидация разницы';



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON VEDOMOST TO ABITUR1;
GRANT ALL ON VEDOMOST TO ABITUR2;
GRANT ALL ON VEDOMOST TO ABITUR3;
GRANT ALL ON VEDOMOST TO ABITUR4;
GRANT ALL ON VEDOMOST TO ALENA_2109;
GRANT ALL ON VEDOMOST TO ALEXANDER_GONCHAROV;
GRANT ALL ON VEDOMOST TO ALINA_E;
GRANT ALL ON VEDOMOST TO ANNA;
GRANT ALL ON VEDOMOST TO ASPA;
GRANT ALL ON VEDOMOST TO ASPIRANTURA;
GRANT ALL ON VEDOMOST TO ASU;
GRANT ALL ON VEDOMOST TO ASU1;
GRANT ALL ON VEDOMOST TO ASU2;
GRANT ALL ON VEDOMOST TO ASU3;
GRANT ALL ON VEDOMOST TO ASU4;
GRANT ALL ON VEDOMOST TO BAKS16;
GRANT ALL ON VEDOMOST TO BAKS68878;
GRANT ALL ON VEDOMOST TO BOBROVICH_O;
GRANT ALL ON VEDOMOST TO DEVELOPER;
GRANT ALL ON VEDOMOST TO DEVELOPER2;
GRANT ALL ON VEDOMOST TO DOBROVOLSKAYA;
GRANT ALL ON VEDOMOST TO DVORETSKAYA_K;
GRANT ALL ON VEDOMOST TO FACULTY1;
GRANT ALL ON VEDOMOST TO GONCHAROV434_2;
GRANT ALL ON VEDOMOST TO GUNICH_O;
GRANT ALL ON VEDOMOST TO GUNICH_OKSANA;
GRANT ALL ON VEDOMOST TO HOSTEL_PK1;
GRANT ALL ON VEDOMOST TO HOSTEL_PK2;
GRANT ALL ON VEDOMOST TO IMSIT_Z;
GRANT SELECT ON VEDOMOST TO INTER_01;
GRANT SELECT ON VEDOMOST TO INTER_02;
GRANT ALL ON VEDOMOST TO IP_PROJECT;
GRANT ALL ON VEDOMOST TO IRONSKULL;
GRANT ALL ON VEDOMOST TO IT;
GRANT ALL ON VEDOMOST TO IT2;
GRANT ALL ON VEDOMOST TO IT5;
GRANT ALL ON VEDOMOST TO IT6;
GRANT ALL ON VEDOMOST TO IT7;
GRANT ALL ON VEDOMOST TO IT8;
GRANT ALL ON VEDOMOST TO IT_1;
GRANT ALL ON VEDOMOST TO IT_2;
GRANT ALL ON VEDOMOST TO IT_3;
GRANT ALL ON VEDOMOST TO IT_8;
GRANT ALL ON VEDOMOST TO IT_D;
GRANT ALL ON VEDOMOST TO IT_L;
GRANT ALL ON VEDOMOST TO IT_M;
GRANT ALL ON VEDOMOST TO IT_PK;
GRANT ALL ON VEDOMOST TO IT_Z;
GRANT ALL ON VEDOMOST TO IVANOVA_A;
GRANT ALL ON VEDOMOST TO JKMUF2507;
GRANT ALL ON VEDOMOST TO KANDRUKEVICH_M;
GRANT ALL ON VEDOMOST TO KAND_M;
GRANT ALL ON VEDOMOST TO KOSIK_N;
GRANT ALL ON VEDOMOST TO KRISTINA;
GRANT ALL ON VEDOMOST TO LAVRENOVA_V;
GRANT ALL ON VEDOMOST TO LENAUSOVA;
GRANT ALL ON VEDOMOST TO LIASHKOVICH_I;
GRANT ALL ON VEDOMOST TO LTRFYFN2019;
GRANT ALL ON VEDOMOST TO MAGISTR;
GRANT ALL ON VEDOMOST TO MARINA;
GRANT ALL ON VEDOMOST TO MATUSEVICH;
GRANT ALL ON VEDOMOST TO MIMI;
GRANT ALL ON VEDOMOST TO MVS;
GRANT ALL ON VEDOMOST TO MVS_1;
GRANT ALL ON VEDOMOST TO MVS_D;
GRANT ALL ON VEDOMOST TO MVS_D_L;
GRANT ALL ON VEDOMOST TO MVS_ETB;
GRANT ALL ON VEDOMOST TO MVS_G;
GRANT ALL ON VEDOMOST TO MVS_L;
GRANT ALL ON VEDOMOST TO MVS_LP;
GRANT ALL ON VEDOMOST TO MVS_N;
GRANT ALL ON VEDOMOST TO MVS_PK;
GRANT ALL ON VEDOMOST TO MVS_V;
GRANT ALL ON VEDOMOST TO MVS_Z;
GRANT ALL ON VEDOMOST TO MVS_ZAM;
GRANT ALL ON VEDOMOST TO MVS_Z_L;
GRANT ALL ON VEDOMOST TO M_2;
GRANT ALL ON VEDOMOST TO NEW78;
GRANT ALL ON VEDOMOST TO NEWLOGIN;
GRANT ALL ON VEDOMOST TO NEWUSER;
GRANT ALL ON VEDOMOST TO NOVIK_A;
GRANT ALL ON VEDOMOST TO OFKIT15;
GRANT ALL ON VEDOMOST TO OFKITA;
GRANT ALL ON VEDOMOST TO OFKIT_1;
GRANT ALL ON VEDOMOST TO OFKIT_15;
GRANT ALL ON VEDOMOST TO OFKIT_A;
GRANT ALL ON VEDOMOST TO OFKIT_D;
GRANT ALL ON VEDOMOST TO OFKIT_D_A;
GRANT ALL ON VEDOMOST TO OFKIT_L;
GRANT ALL ON VEDOMOST TO OFKIT_LAB;
GRANT ALL ON VEDOMOST TO OFKIT_M;
GRANT ALL ON VEDOMOST TO OFKIT_N;
GRANT ALL ON VEDOMOST TO OFKIT_PK;
GRANT ALL ON VEDOMOST TO OFKIT_Z;
GRANT ALL ON VEDOMOST TO OK;
GRANT ALL ON VEDOMOST TO OK1;
GRANT ALL ON VEDOMOST TO OK2;
GRANT ALL ON VEDOMOST TO OKSANA;
GRANT ALL ON VEDOMOST TO OK_ST;
GRANT ALL ON VEDOMOST TO OK_STUD;
GRANT ALL ON VEDOMOST TO OK_STUD_1;
GRANT ALL ON VEDOMOST TO OK_STUD_2;
GRANT ALL ON VEDOMOST TO OK_STUD_N;
GRANT ALL ON VEDOMOST TO OK_STUD_SL;
GRANT ALL ON VEDOMOST TO OK_STUD_US;
GRANT ALL ON VEDOMOST TO PK;
GRANT ALL ON VEDOMOST TO PK_IT;
GRANT ALL ON VEDOMOST TO PK_IT1;
GRANT ALL ON VEDOMOST TO PK_IT2;
GRANT ALL ON VEDOMOST TO PK_IT3;
GRANT ALL ON VEDOMOST TO PK_IT4;
GRANT ALL ON VEDOMOST TO PK_IT5;
GRANT ALL ON VEDOMOST TO PK_MSTIG1;
GRANT ALL ON VEDOMOST TO PK_MSTIG2;
GRANT ALL ON VEDOMOST TO PK_MSTIG3;
GRANT ALL ON VEDOMOST TO PK_MSTIG4;
GRANT ALL ON VEDOMOST TO PK_MSTIGP1;
GRANT ALL ON VEDOMOST TO PK_MSTIGP2;
GRANT ALL ON VEDOMOST TO PK_MSTIG_1;
GRANT ALL ON VEDOMOST TO PK_MSTIG_2;
GRANT ALL ON VEDOMOST TO PK_MSTIG_3;
GRANT ALL ON VEDOMOST TO PK_MSTIG_4;
GRANT ALL ON VEDOMOST TO PK_MSTIG_P1;
GRANT ALL ON VEDOMOST TO PK_MSTIG_P2;
GRANT ALL ON VEDOMOST TO PK_MVS;
GRANT ALL ON VEDOMOST TO PK_MVS1;
GRANT ALL ON VEDOMOST TO PK_MVS2;
GRANT ALL ON VEDOMOST TO PK_MVS3;
GRANT ALL ON VEDOMOST TO PK_MVS4;
GRANT ALL ON VEDOMOST TO PK_MVS5;
GRANT ALL ON VEDOMOST TO PK_MVSP1;
GRANT ALL ON VEDOMOST TO PK_MVSP2;
GRANT ALL ON VEDOMOST TO PK_MVS_1;
GRANT ALL ON VEDOMOST TO PK_MVS_2;
GRANT ALL ON VEDOMOST TO PK_MVS_3;
GRANT ALL ON VEDOMOST TO PK_MVS_4;
GRANT ALL ON VEDOMOST TO PK_MVS_P1;
GRANT ALL ON VEDOMOST TO PK_MVS_P2;
GRANT ALL ON VEDOMOST TO PK_OFKIT;
GRANT ALL ON VEDOMOST TO PK_OFKIT1;
GRANT ALL ON VEDOMOST TO PK_OFKIT2;
GRANT ALL ON VEDOMOST TO PK_OFKIT3;
GRANT ALL ON VEDOMOST TO PK_OFKIT4;
GRANT ALL ON VEDOMOST TO PK_OFKIT5;
GRANT ALL ON VEDOMOST TO PK_OFKITP1;
GRANT ALL ON VEDOMOST TO PK_OFKITP2;
GRANT ALL ON VEDOMOST TO PK_OFK_1;
GRANT ALL ON VEDOMOST TO PK_OFK_2;
GRANT ALL ON VEDOMOST TO PK_OFK_3;
GRANT ALL ON VEDOMOST TO PK_OFK_4;
GRANT ALL ON VEDOMOST TO PK_OFK_P1;
GRANT ALL ON VEDOMOST TO PK_OFK_P2;
GRANT ALL ON VEDOMOST TO PK_OTV1;
GRANT ALL ON VEDOMOST TO PK_OTV2;
GRANT ALL ON VEDOMOST TO PK_OTV3;
GRANT ALL ON VEDOMOST TO PK_OTV4;
GRANT ALL ON VEDOMOST TO PK_SIIE;
GRANT ALL ON VEDOMOST TO PK_SIIE1;
GRANT ALL ON VEDOMOST TO PK_SIIE2;
GRANT ALL ON VEDOMOST TO PK_SIIE3;
GRANT ALL ON VEDOMOST TO PK_SIIE4;
GRANT ALL ON VEDOMOST TO PK_SIIE5;
GRANT ALL ON VEDOMOST TO PK_SIIEP1;
GRANT ALL ON VEDOMOST TO PK_SIIEP2;
GRANT ALL ON VEDOMOST TO PK_SIIE_1;
GRANT ALL ON VEDOMOST TO PK_SIIE_2;
GRANT ALL ON VEDOMOST TO PK_SIIE_3;
GRANT ALL ON VEDOMOST TO PK_SIIE_4;
GRANT ALL ON VEDOMOST TO PK_SIIE_P1;
GRANT ALL ON VEDOMOST TO PK_SIIE_P2;
GRANT ALL ON VEDOMOST TO PLANIDA_E;
GRANT SELECT ON VEDOMOST TO PRESS_01;
GRANT ALL ON VEDOMOST TO PRIEM1;
GRANT ALL ON VEDOMOST TO SADIK;
GRANT ALL ON VEDOMOST TO SEL_COM;
GRANT ALL ON VEDOMOST TO SERAFIMOVICH_Y;
GRANT ALL ON VEDOMOST TO SETUN1998;
GRANT ALL ON VEDOMOST TO SHMAENKOVA_M;
GRANT ALL ON VEDOMOST TO SHPAKEVICH_P;
GRANT ALL ON VEDOMOST TO SIIE1;
GRANT ALL ON VEDOMOST TO SIIE10;
GRANT ALL ON VEDOMOST TO SIIE12;
GRANT ALL ON VEDOMOST TO SIIE123;
GRANT ALL ON VEDOMOST TO SIIE1234;
GRANT ALL ON VEDOMOST TO SIIE2;
GRANT ALL ON VEDOMOST TO SIIE3;
GRANT ALL ON VEDOMOST TO SIIE4;
GRANT ALL ON VEDOMOST TO SIIE6;
GRANT ALL ON VEDOMOST TO SIIE_123;
GRANT ALL ON VEDOMOST TO SIIE_2;
GRANT ALL ON VEDOMOST TO SIIE_5;
GRANT ALL ON VEDOMOST TO SIIE_BELAYA_M;
GRANT ALL ON VEDOMOST TO SIIE_D;
GRANT ALL ON VEDOMOST TO SIIE_D2;
GRANT ALL ON VEDOMOST TO SIIE_LAB;
GRANT ALL ON VEDOMOST TO SIIE_LAB_D;
GRANT ALL ON VEDOMOST TO SIIE_LAB_Z;
GRANT ALL ON VEDOMOST TO SIIE_LAB_Z2;
GRANT ALL ON VEDOMOST TO SIIE_LAB_Z3;
GRANT ALL ON VEDOMOST TO SIIE_NEW;
GRANT ALL ON VEDOMOST TO SIIE_O;
GRANT ALL ON VEDOMOST TO SIIE_PK;
GRANT ALL ON VEDOMOST TO SIIE_Z;
GRANT ALL ON VEDOMOST TO SIIE_Z1;
GRANT ALL ON VEDOMOST TO SIIE_Z12;
GRANT ALL ON VEDOMOST TO SMOLENKOVA_T;
GRANT ALL ON VEDOMOST TO STUD_KADR1;
GRANT ALL ON VEDOMOST TO STUD_KADR2;
GRANT ALL ON VEDOMOST TO STUD_KADR3;
GRANT ALL ON VEDOMOST TO STUD_KADR4;
GRANT ALL ON VEDOMOST TO SVETA;
GRANT ALL ON VEDOMOST TO TEST_PREPOD;
GRANT ALL ON VEDOMOST TO TEST_PROBA;
GRANT ALL ON VEDOMOST TO TEST_STUD;
GRANT ALL ON VEDOMOST TO UHNOVEC;
GRANT ALL ON VEDOMOST TO UO_LAB;
GRANT ALL ON VEDOMOST TO UO_M;
GRANT ALL ON VEDOMOST TO UO_N;
GRANT ALL ON VEDOMOST TO UO_Z;
GRANT ALL ON VEDOMOST TO USER123;
GRANT ALL ON VEDOMOST TO USER622;
GRANT SELECT ON VEDOMOST TO VIEWER1;
GRANT ALL ON VEDOMOST TO VIEWER_MOB;
GRANT ALL ON VEDOMOST TO VNUK;
GRANT ALL ON VEDOMOST TO VOROBEI75;
GRANT ALL ON VEDOMOST TO YA;
GRANT ALL ON VEDOMOST TO YAUHENI_HATSURA;
GRANT ALL ON VEDOMOST TO ZHANNA_73;

/* Privileges of triggers */
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$VEDOMOST_AD;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$VEDOMOST_AD;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$VEDOMOST_AD;
GRANT UPDATE, REFERENCES ON VEDOMOST TO TRIGGER IBE$VEDOMOST_AD;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$VEDOMOST_AI;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$VEDOMOST_AI;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$VEDOMOST_AI;
GRANT UPDATE, REFERENCES ON VEDOMOST TO TRIGGER IBE$VEDOMOST_AI;
GRANT INSERT ON IBE$LOG_FIELDS TO TRIGGER IBE$VEDOMOST_AU;
GRANT INSERT ON IBE$LOG_KEYS TO TRIGGER IBE$VEDOMOST_AU;
GRANT INSERT ON IBE$LOG_TABLES TO TRIGGER IBE$VEDOMOST_AU;
GRANT UPDATE, REFERENCES ON VEDOMOST TO TRIGGER IBE$VEDOMOST_AU;